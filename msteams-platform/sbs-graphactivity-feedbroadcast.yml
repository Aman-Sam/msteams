### YamlMime:Tutorial
title: Graph activity feed broadcast
metadata:
  title: Graph activity feed broadcast
  description: In this tutorial, you'll learn to broadcast a message to all members of organization using activity feed notification.
  audience: Developer
  level: Beginner
  ms.date: 02/08/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/concepts/design/activity-feed-notifications.md
  nextTutorialTitle: Read more on activity feed notifications.
  ms.custom: mvc
  ms.localizationpriority: high
items:
- durationInMinutes: 1
  content: |
    The Microsoft Teams activity feed enables users to triage items that require attention by notifying them of changes. You can use the activity feed notification APIs in Microsoft Graph to extend this functionality to your apps. 

    This step-by-step guide shows a feature where user can broadcast a message to all members of organization using activity feed notification.

    **Interactions of graph activity feed broadcast**

    * Broadcasts message for all the members.
    * Displays activity feed notification.
    * Broadcasts details available for members. 

    You'll see the following output:

      ![Activity feed](~/assets/images/sbs-graphactivity-feedbroadcast/outputready.png)

- title: Prerequisites
  durationInMinutes: 1
  content: |
    Ensure you install the following tools and set up your development environment:  

    * [.NET Core SDK](https://dotnet.microsoft.com/download) version 3.1
    * [Microsoft Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)
    * [ngrok](https://ngrok.com/download) latest version (only for devbox testing) or any equivalent tunneling solution
    
      > [!NOTE]
      > After downloading ngrok, sign up and install [authtoken](https://ngrok.com/download).
    
    * [Microsoft Teams](https://teams.microsoft.com/) with valid account

- title: Set up local environment
  durationInMinutes: 1
  content: |
   Clone `Microsoft-Teams-Samples` repository to your local GitHub:  

    1. Open [Microsoft Teams Samples](https://github.com/OfficeDev/Microsoft-Teams-Samples).
    1. Select **Code**.
    1. From the dropdown menu, select **Open with GitHub Desktop**.

        :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/clonerepository1.png" alt-text="Clone repository" border="true":::

    1. Select **Clone**. 

- title: Register your Teams auth single sign-on (SSO) with Microsoft Azure Active Directory (Azure AD)
  durationInMinutes: 1
  content: |
    **To register your app through the Microsoft Azure AD portal**  

    1. Go to the [Azure portal] (https://portal.azure.com/).

    1. Select **Azure Active Directory**.

    1. In the left navigation panel, select **App Registrations**.

    1. Select **New registration**.

       :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/newregisteration.png" alt-text="New registration" border="true":::

    1. On the **Register an application** page, set the value as follows:

       * Set **Name** to your app name.

       * Set **Supported account types** to any account type.

       * Leave the **Redirect URI** empty.

       * Select **Register**.

        ![Register](~/assets/images/sbs-graphactivity-feedbroadcast/register.png)
        :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/register.png" alt-text="New registration" border="true":::
    1. From the app **Overview** page, copy the values of the **Application (client) ID** and **Directory (tenant) ID** and save the values for later use.

        ![Set link](~/assets/images/sbs-graphactivity-feedbroadcast/overview.png)
        :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/overview.png" alt-text="New registration" border="true":::
    **To create tunnel for local web server**

    Use ngrok to create a tunnel to your locally running web server's publicly available HTTPS endpoints. Run the following command in ngrok:

     ```bash
     ngrok http -host-header=localhost 3978
     ```

    > [!TIP]
    > If you encounter **ERR_NGROK_4018**, follow the steps provided in the command prompt to sign-up and authenticate ngrok. Then run the `ngrok http -host-header=localhost 3978` command.

    1. Under **Manage**, select **Expose an API**.

    1. Select **Set**.

        :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/exposeanapi.png" alt-text="New registration" border="true":::

    1. Set the **Application ID URI** in the form of `api://{AppID}`.

       ![Set link](~/assets/images/sbs-graphactivity-feedbroadcast/setlinkapplication.png)
        :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/setlinkapplication.png" alt-text="Set a link" border="true":::

    1. Insert the `WebAppDomain` value between `api://` and `/{AppID}`.</br>
        `api://bff2****.ngrok.io/{AppID}`</br>
        
       The following image shows the domain name:
        
        :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/savelink.png" alt-text="Save a link" border="true":::

        > [!NOTE]
        > If you're using a tunneling service such as ngrok, ensure you update the value whenever your ngrok subdomain changes.
        > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`, where `f631****.ngrok.io` is the new ngrok subdomain name.

    1. Select **Add a scope**. 

        :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/addascope.png" alt-text="Add scope" border="true":::

    1. In the panel that appears, enter `access_as_user` as the **Scope name**.
  
    1. Set **Who can consent?** to `Admins and users`.
  
    1. To configure the admin and user consent prompts with appropriate values for `access_as_user` scope, provide the following information in the fields:</br>
    
         * Enter `Teams can access the user’s profile` as **Admin consent display name**.

         * Enter `Allows Teams to call the app’s web APIs as the current user` as **Admin consent description**.

         * Enter `Teams can access the user profile and make requests on the user’s behalf` as **User consent display name**.

         * Enter `Enable Teams to call this app’s APIs with the same rights as the user` as **User consent description**.
  
    1. Ensure that **State** is set to **Enabled**.
  
    1. Select **Add scope** to save.

         :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/addascopeuser.png" alt-text="Add scope" border="true":::

        > [!NOTE]
        > The **Scope name** should match with the **Application ID** URI with `/access_as_user` appended at the end.</br>
           `api://bff2****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`

        ![Scopes](~/assets/images/sbs-graphactivity-feedbroadcast/scopes.png) 
  
    1. In the **Authorized client applications** section, identify the applications that you want to authorize for your app’s web application. 
    
    1. Select **Add a client application**. 

          :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/selectclientapp.png" alt-text="Select client" border="true":::

    1. Enter **Client ID**: `1fec8e78-bce4-4aaf-ab1b-5451cc387264` for Teams mobile or desktop application. 

          :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/addclientapplication1.png" alt-text="Add client application" border="true":::

       You can enter **Client ID**: `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` for Teams web application.

        :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/addclientapplication2.png" alt-text="Add client" border="true":::

    1. Select **Authorized scopes**.

         :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/authorizedscope.png" alt-text="Authroized scope" border="true":::

       The following image displays the client IDs:

         :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/clientapplications.png" alt-text="Client application" border="true":::

    1. In the left panel, select **API Permissions**. 

       > [!NOTE]
       > Users need to consent to these permissions only if the Azure AD app is registered in a different tenant.

    1. Select **Add a permission**.

         :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/addpermission.png" alt-text="Add a permission" border="true":::

    1. Select **Microsoft Graph**.

    1. Select **Delegated permissions**.

    1. Add the following permissions:</br>
         * **User.Read** (enabled by default)
         * **Directory.Read.All**
         * **Directory.ReadWrite.All**
         * **TeamsAppInstallation.ReadForUser**
         * **TeamsAppInstallation.ReadWriteForUser**
         * **TeamsActivity.Send**
         * **TeamsAppInstallation.ReadForUser.All**

          :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/requestpermissions.png" alt-text="Permission" border="true":::

           :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/requestpermissions1.png" alt-text="Permission" border="true":::

    1. Select **Add permissions**.

    1. Go to **Add a permission**.

    1. Select **Add a permission**.

    1. Select **Microsoft Graph**.

    1. Select **Application permissions**.

    1. Add the following permissions:</br>
         * **TeamsActivity.Send** 
         * **Directory.Read.All**

          :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/requestapplicationpermission.png" alt-text="Request permission" border="true":::

           :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/requestpermissions2.png" alt-text="Request permission" border="true":::  

    1. Select **Add permissions**.

    1. From the left panel, select **Authentication** to set a redirect URI. 

       > [!NOTE]
       > If an app is not granted IT admin consent, users must provide consent the first time they use an app.
               
         1. Select **Add a platform**.

         1. Select **Web**.

             :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/addaplatform.png" alt-text="Add platform" border="true":::

         1. Enter the redirect URI for your app by appending `Auth/end` to fully qualified domain name:</br> 
           `https://bff2****.ngrok.io/Auth/end`. </br>

         1. Enable **Implicit grant and hybrid flows** by selecting the following checkboxes:
             * **ID tokens**
             * **Access tokens**
   
         1. Select **Configure**.

             :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/configureweb.png" alt-text="Configure web" border="true":::

         1. Select **Add URI** and enter `https://bff2****.ngrok.io/Auth/Start`. 

         1. Select **Save**.

             :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/redirect.png" alt-text="Redirect uri" border="true":::


    **To create client secret**

    1. In the left panel, select **Certificates & secrets**. 

    1. In the **Client secrets** section, select **New client secret**. 

          :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/clientsecret.png" alt-text="Client secret" border="true":::
    
       The **Add a client secret** window appears.  

    1. Enter a value in **Description**.
    
    1. Select **Add**.

          :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/secretsave.png" alt-text="Secret id" border="true":::

    1. In the **Value** column, select **Copy to clipboard**.

          :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/clientsecretcode.png" alt-text="Client secret code" border="true":::
       
       > [!TIP]
       > Save the **Client secrets** value or app password for future reference.


- title: Set up app settings and manifest files
  durationInMinutes: 1
  content: |
    1. Navigate to **appsettings.json** in cloned repository.

          :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/appsettingslocation.png" alt-text="App settings location" border="true":::
    1. Open **appsettings.json** in **Visual Studio 2019** and update the following information:  

         * Set `"MicrosoftAppId"` to your bot's **Microsoft App ID**.
         * Set `"TenantID"` to **Directory (tenant) ID**.
         * Set `"MicrosoftAppPassword"` to your bot's client secret ID value.
         * Set `"BaseUrl"` to the `[WebAppDomainName]`.

      
      :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/appsettingjson.png" alt-text="Appsettings" border="true":::
    1. Navigate to **manifest.json** in cloned repository.

        ![Manifest file location](~/assets/images/sbs-graphactivity-feedbroadcast/manifestlocationpackage.png)
         :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/manifestlocationpackage.png" alt-text="Manifest location" border="true":::
    1. Open **manifest.json** in **Visual Studio 2019** and make the following changes:

         * Replace all occurrences of `<<Microsoft-App-ID>>` with your bot's **Microsoft App ID**.
         * Replace all occurrences of `<<Base_URL>>` with your fully qualified domain name.
         * Set `validDomains` to `[WebAppDomainName]`.

        ![Manifest image2](~/assets/images/sbs-graphactivity-feedbroadcast/manifestfile1.png)
 :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/manifestfile1.png" alt-text="Manifest file" border="true":::

- title: Build and run the service
  durationInMinutes: 1
  content: |
    **To build and run the service using Visual Studio**

    # [Visual Studio 2019](#tab/vs2019)

       1. Launch **Visual Studio 2019**.
       1. Navigate to **File** > **Open** > **Project/Solution**.
    
          ![Open file](~/assets/images/sbs-graphactivity-feedbroadcast/VSopenfile.png)
 :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/VSopenfile.png" alt-text="Open file in Visual Studio" border="true":::
       1. Select **ActivityFeedBroadcast.sln** file from **csharp** folder.

          ![Solution File](~/assets/images/sbs-graphactivity-feedbroadcast/openproject.png)
             :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/openproject.png" alt-text="Open a project" border="true":::
       1. Press **F5** to run the project.
    
       1. Select **Yes** if the following dialog appears:

          ![Trust Certificate](~/assets/images/meeting-token-generator/meeting-token-generator-certificate.png)
           :::image type="content" source="../msteams-platform/assets/images/meeting-token-generator/meeting-token-generator-certificate.png" alt-text="Select certificate" border="true":::

          A webpage opens with a message **Your bot is ready!**.

          ![App is ready](~/assets/images/sbs-graphactivity-feedbroadcast/appisready.png)
           :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/appisready.png" alt-text="App is ready" border="true":::

   
- title: Add activity feed broadcast app to Teams
  durationInMinutes: 1
  content: |
    **To add activity feed broadcast app to Teams**

             
    1. In your cloned repository, navigate to **csharp > ActivityFeedBroadcast > AppPackage**.

    1. Create a .zip with the following files that are present in the **AppPackage** folder: 
       * manifest.json
       * icon-outline.png
       * icon-color.png

       ![Zip file](~/assets/images/sbs-graphactivity-feedbroadcast/selectzip.png) 
        :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/selectzip.png" alt-text="SElect zip file" border="true":::
    
    1. Go to **Microsoft Teams**.

    1. Select **Apps**.

    1. Select **Manage your apps**.
    
    1. Select **Upload a custom app**. 

       ![Upload custom app](~/assets/images/sbs-graphactivity-feedbroadcast/uploadacustomapp.png)
        :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/uploadacustomapp.png" alt-text="Upload a custom app" border="true":::

    1. Select **Open** to upload the .zip file that you created in the **AppPackage** folder.

       ![Select zip file](~/assets/images/sbs-graphactivity-feedbroadcast/openacustomapp.png)
        :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/openacustomapp.png" alt-text=Open a custom app" border="true":::

    1. Select **Add**.

       ![Add an app](~/assets/images/sbs-graphactivity-feedbroadcast/addanapp.png) 
        :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/addanapp.png" alt-text="Add app" border="true":::
   
          The app is visible in the meeting SidePanel.      

    1. The **Broadcast Tab** displays Message title and Message description.

        ![Output](~/assets/images/sbs-graphactivity-feedbroadcast/output1.png) 
         :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/output1.png" alt-text="Output" border="true":::

    1. Enter the message and select **Send message**.

        :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/output2.png" alt-text="Output" border="true":::

     
- title: Complete challenge
  durationInMinutes: 1
  content: |
    Did you come up with something like this?

       ![Activity feed](~/assets/images/sbs-graphactivity-feedbroadcast/outputready.png)
        :::image type="content" source="../msteams-platform/assets/images/sbs-graphactivity-feedbroadcast/exposeanapi.png" alt-text="New registration" border="true":::


- content: |
    You've completed the tutorial to get started with a **activity feed broadcast** app!



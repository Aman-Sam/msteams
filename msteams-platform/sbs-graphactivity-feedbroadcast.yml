### YamlMime:Tutorial
title: Graph activity feed broadcast
metadata:
  title: Graph activity feed broadcast
  description: In this tutorial, you'll learn to broadcast a message to all members of organization using activity feed notification.
  audience: Developer
  level: Beginner
  ms.date: 02/08/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/enable-and-configure-your-app-for-teams-meetings.md
  nextTutorialTitle: Read more to enable and configure apps for meetings
  ms.custom: mvc
  ms.localizationpriority: high
items:
- durationInMinutes: 1
  content: |
    This step-by-step guide shows a feature where user can broadcast a message to all members of organization using activity feed notification.

    **Interactions of graph activity feed broadcast**

    * Broadcasts message for all the members.
    * Displays activity feed notification.
    * Broadcasts details available for members. 

    You'll see the following output:

     (Placeholder for image)

- title: Prerequisites
  durationInMinutes: 1
  content: |
    Ensure you install the following tools and set up your development environment:  

    * [.NET Core SDK](https://dotnet.microsoft.com/download) version 3.1
    * [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)
    * [ngrok](https://ngrok.com/download) latest version (only for devbox testing) or any equivalent tunneling solution
    
      > [!NOTE]
      > After downloading ngrok, sign up and install [authtoken](https://ngrok.com/download).
    
    * [Microsoft Teams](https://teams.microsoft.com/) with valid account

- title: Set up local environment
  durationInMinutes: 1
  content: |
   Clone `Microsoft-Teams-Samples` repository to your local GitHub:  

    1. Open [Microsoft Teams Samples](https://github.com/OfficeDev/Microsoft-Teams-Samples).
    1. Select **Code**.
    1. From the dropdown menu, select **Open with GitHub Desktop**.

       ![Clone repository](~/assets/images/sbs-graphactivity-feedbroadcast/clonerepository1.png)

    1. Select **Clone**. 

- title: Update the Azure AD app registration
  durationInMinutes: 1
  content: |
    **To register your app through the Azure AD portal**  

    1. Go to the [Microsoft Azure portal](https://portal.azure.com/).

    1. Select **Azure Active Directory**.

    1. In the left navigation panel, select **App Registrations**.

    1. Select your bot.

       ![App registration](~/assets/images/sbs-graphactivity-feedbroadcast/newregisteration.png)

    1. Under **Manage**, select **Expose an API**.

    1. Select **Set**.

       ![Register](~/assets/images/sbs-graphactivity-feedbroadcast/register.png)

    1. Set the **Application ID URI** in the form of `api://{AppID}`.

       ![Set link](~/assets/images/sbs-graphactivity-feedbroadcast/overview.png)

       ![App ID URI](~/assets/images/sbs-graphactivity-feedbroadcast/exposeanapi.png)

       ![Set link](~/assets/images/sbs-graphactivity-feedbroadcast/savelink.png)


    1. Insert the `WebAppDomain` value between `api://` and `/{AppID}`.</br>
        `api://ae57****.ngrok.io/{AppID}`</br>
        
       The following image shows the domain name:
        
        ![App ID URI](~/assets/images/sbs-graphactivity-feedbroadcast/exposeanapi.png)

        > [!NOTE]
        > If you're using a tunneling service such as ngrok, ensure you update the value whenever your ngrok subdomain changes.
        > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`, where `f631****.ngrok.io` is the new ngrok subdomain name.

    1. Select **Add a scope**. 

       ![Select scope](~/assets/images/sbs-graphactivity-feedbroadcast/addascope.png)
    
    1. In the panel that appears, enter `access_as_user` as the **Scope name**.
  
    1. Set **Who can consent?** to `Admins and users`.
  
    1. To configure the admin and user consent prompts with appropriate values for `access_as_user` scope, provide the following information in the fields:</br>
    
         * Enter `Teams can access the user’s profile` as **Admin consent display name**.

         * Enter `Allows Teams to call the app’s web APIs as the current user` as **Admin consent description**.

         * Enter `Teams can access the user profile and make requests on the user’s behalf` as **User consent display name**.

         * Enter `Enable Teams to call this app’s APIs with the same rights as the user` as **User consent description**.
  
    1. Ensure that **State** is set to **Enabled**.
  
    1. Select **Add scope** to save.

        ![Add a scope](~/assets/images/sbs-graphactivity-feedbroadcast/addascopeuser.png)

        > [!NOTE]
        > The **Scope name** should match with the **Application ID** URI with `/access_as_user` appended at the end.</br>
           `api://ae57****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`

        ![Scopes](~/assets/images/sbs-graphactivity-feedbroadcast/scopes.png) 
  
    1. In the **Authorized client applications** section, identify the applications that you want to authorize for your app’s web application. 
    
    1. Select **Add a client application**. 

        ![Select client application](~/assets/images/sbs-graphactivity-feedbroadcast/selectclientapp.png) 

    1. Enter **Client ID**: `1fec8e78-bce4-4aaf-ab1b-5451cc387264` for Teams mobile or desktop application. 

        ![Add client application 1](~/assets/images/sbs-graphactivity-feedbroadcast/addclientapplication1.png) 

       You can enter **Client ID**: `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` for Teams web application.

        ![Add client application 2](~/assets/images/sbs-graphactivity-feedbroadcast/addclientapplication2.png) 

    1. Select **Authorized scopes**.

        ![Add client application 2](~/assets/images/sbs-graphactivity-feedbroadcast/authorizedscope.png) 

       The following image displays the client IDs:

        ![Client applications](~/assets/images/sbs-graphactivity-feedbroadcast/clientapplications.png) 
  
    1. In the left panel, select **API Permissions**. 

       > [!NOTE]
       > Users need to consent to these permissions only if the Azure AD app is registered in a different tenant.

    1. Select **Add a permission**.

        ![Add permission](~/assets/images/sbs-graphactivity-feedbroadcast/addpermission.png)

    1. Select **Microsoft Graph**.

    1. Select **Delegated permissions**.

        By default, **User.Read** is selected.

         ![User](~/assets/images/sbs-graphactivity-feedbroadcast/userpermission.png)

    1. Add the following permissions:</br>
         * **email**
         * **offline_access**
         * **OpenId**
         * **profile**

    1. Select **Add permissions**.

         ![Other permissions](~/assets/images/sbs-graphactivity-feedbroadcast/requestpermissions.png)

         ![Other permissions](~/assets/images/sbs-graphactivity-feedbroadcast/requestpermissions1.png)

         ![Other permissions](~/assets/images/sbs-graphactivity-feedbroadcast/requestpermissions2.png)

         ![Other permissions](~/assets/images/sbs-graphactivity-feedbroadcast/requestapplicationpermission.png)

         ![Other permissions](~/assets/images/sbs-graphactivity-feedbroadcast/requestapplicationpermission.png)  
    1. From the left panel, select **Authentication** to set a redirect URI. 

       > [!NOTE]
       > If an app is not granted IT admin consent, users must provide consent the first time they use an app.
               
         1. Select **Add a platform**.
         1. Select **Web**.

            ![Web](~/assets/images/sbs-graphactivity-feedbroadcast/addaplatform.png)

            ![Web](~/assets/images/sbs-graphactivity-feedbroadcast/configureweb.png)

         1. Enter the redirect URI for your app by appending `auth-end` to fully qualified domain name:</br> 
           `https://ae57****.ngrok.io/auth-end`. </br>

         1. Enable **Implicit grant and hybrid flows** by selecting the following checkboxes:
             * **ID tokens**
             * **Access tokens**
   
         1. Select **Configure**.

            ![Auth-end](~/assets/images/sbs-graphactivity-feedbroadcast/redirect.png)


- title: Set up app settings and manifest files
  durationInMinutes: 1
  content: |
    1. Navigate to **appsettings.json** in cloned repository.

        ![App settings location](~/assets/images/sbs-graphactivity-feedbroadcast/appsettingjson.png)

    1. Open **appsettings.json** in **Visual Studio 2019** and update the following information:  

         * Set `"MicrosoftAppId"` to your bot's **Microsoft App ID**.
         * Set `"MicrosoftAppPassword"` to your bot's client secret ID value.
         * Set `"BaseUrl"` to the fully qualified domain name.

        ![App settings](~/assets/images/sbs-graphactivity-feedbroadcast/appsettings.png)

    1. Navigate to **manifest.json** in cloned repository.

        ![Manifest file location](~/assets/images/sbs-graphactivity-feedbroadcast/manifestfile1.png)
    
    1. Open **manifest.json** in **Visual Studio 2019** and make the following changes:

         * Replace all occurrences of `<<Your_Domain_URL>>` with your fully qualified domain name.
         * Replace all occurrences of `<<Microsoft-App-ID>>` with your bot's **Microsoft App ID**.

        ![Manifest image2](~/assets/images/sbs-graphactivity-feedbroadcast/manifestfile1.png)

- title: Build and run the service
  durationInMinutes: 1
  content: |
    **To build and run the service using Visual Studio 2019 or Command line**

    # [Visual Studio 2019](#tab/vs2019)

       1. Launch **Visual Studio 2019**.
       1. Navigate to **File** > **Open** > **Project/Solution**.
    
          ![Open file](~/assets/images/sbs-graphactivity-feedbroadcast/openproject.png)

       1. Select **SidePanel.sln** file from **csharp** folder.

          ![Solution File](~/assets/images/sbs-graphactivity-feedbroadcast/openproject.png)

       1. Press **F5** to run the project.
    
       1. Select **Yes** if the following dialog appears:

          ![Trust Certificate](~/assets/images/meeting-token-generator/meeting-token-generator-certificate.png)

          A webpage opens with a message **Your bot is ready!**.

          ![App ready](~/assets/images/sbs-graphactivity-feedbroadcast/appisready.png) 

        
    # [Command line](#tab/cli)

    Navigate to **samples > meetings-sidepanel > csharp > Side Panel** in a Command Prompt window and enter the following command:

    ```bash
    dotnet run
    ```
   
    ![Dotnet](~/assets/images/sbs-graphactivity-feedbroadcast/dotnetruncmd.png)
      
- title: Add Meetings SidePanel app to Teams
  durationInMinutes: 1
  content: |
    **To create a Teams meeting and add Meetings SidePanel App**

    1. In your cloned repository, navigate to **csharp > Side Panel > Manifest**.

    1. Create a .zip with the following files that are present in the **Manifest** folder: 
       * manifest.json
       * icon-outline.png
       * icon-color.png

       ![Zip file](~/assets/images/sbs-graphactivity-feedbroadcast/selectzip.png) 
    
    1. Create a meeting with a few presenters and attendees.
   
    1. After the meeting is created, go to the meeting details page and select **Add an app**.

       ![Add an app](~/assets/images/sbs-graphactivity-feedbroadcast/addanapp.png) 
   
    1. In the pop-up that opens, select **Manage apps**.

       ![Manage apps](~/assets/images/meeting-token-generator/meeting-token-generator-manageappsimage.png)
   
    1. Select **Upload a custom app**. 

       ![Upload custom app](~/assets/images/sbs-graphactivity-feedbroadcast/uploadcustomapp.png)

    1. Select **Open** to upload the .zip file that you created in the **Manifest** folder.

       ![Select zip file](~/assets/images/sbs-graphactivity-feedbroadcast/selectzip.png)

    1. Select **Add**.

       ![Add the app](~/assets/images/sbs-graphactivity-feedbroadcast/addtheapp.png)

       The **Manage apps** section displays the list of applications.

       ![App in Manage apps](~/assets/images/sbs-graphactivity-feedbroadcast/manageappsection.png)
   
    1. Go to Teams meeting.
    
    1. Select **Add an app**. 
    
       In the app selection page, the app displays as **Side Panel**.
  
       ![App icon in Teams](~/assets/images/sbs-graphactivity-feedbroadcast/appicon.png)

    1. Select the **Side Panel** app.
    
    1. Select **Save**.

       ![Welcome App](~/assets/images/sbs-graphactivity-feedbroadcast/welcomeapp.png)
   
       The app is visible in the meeting SidePanel.         

- title: Interact with the app in Teams
  durationInMinutes: 1
  content: |
    Let's interact with the app in Teams!

    1. Select **Add New Agenda Item** to add a new agenda to the default agenda list.

       ![Token in Meet](~/assets/images/sbs-graphactivity-feedbroadcast/sidepanelinmeet.png)

    1. Enter a new agenda item to the list and select **Add**.

       ![Token in Meet](~/assets/images/sbs-graphactivity-feedbroadcast/newagenda.png)

       The new agenda is added in the list.

    1. Select **Publish Agenda**.

       ![Your Token](~/assets/images/sbs-graphactivity-feedbroadcast/youragenda.png)

       The new agenda list is displayed in the meeting chat.

       ![Your Token](~/assets/images/sbs-graphactivity-feedbroadcast/agendainchat.png)

- title: Complete challenge
  durationInMinutes: 1
  content: |
    Did you come up with something like this?

       ![Token in Meet](~/assets/images/sbs-graphactivity-feedbroadcast/sidepanelondesktopmobile.png)


- content: |
    You've completed the tutorial to get started with a **Side Panel** app!



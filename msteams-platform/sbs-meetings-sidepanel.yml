### YamlMime:Tutorial
title: Generate meeting side panel
metadata:
  title: Meeting Side Panel
  description: With this learning module, learn how to generate meetings side panel to add and publish agenda for Teams.
  audience: Developer
  level: Beginner
  ms.date: 12/06/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/build-tabs-for-meeting.md
  nextTutorialTitle: Read more to enable and configure apps for meetings
  ms.custom: mvc
  ms.localizationpriority: high
items:
- durationInMinutes: 1
  content: |
    The meeting side panel enhances your in-meeting experience and helps organizers and presenters to have different sets of views and actions.

    Key features of the meeting side panel are:

    * Provisions to add a new agenda point.
    * Adds the agenda as text input to the side panel list.
    * Publishes the agenda list to the meeting chat.
    
    This step-by-step guide helps you to generate a meeting side panel to add and publish an agenda. You'll see the following output:

       :::image type="content" source="assets/images/meetings-side-panel/sidepanelondesktopmobile_1.png" alt-text="Screenshot of the meeting side panel output after you have successfully completed the step-by-step guide.":::

- title: Prerequisites
  durationInMinutes: 1
  content: |
    Ensure that you install the following tools and set up your development environment:  

     | &nbsp; | Install | For using... |
     | --- | --- | --- |
     | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams to collaborate with everyone you work with through apps for chat, meetings, and call-all in one place.|
     | &nbsp; | [Visual Studio 2022](https://visualstudio.microsoft.com) | You can install the enterprise version in Visual Studio 2022, and install the ASP.NET and web development workloads. Use the latest version. |
     | &nbsp; | [.NET Core SDK](https://dotnet.microsoft.com/en-us/download) | Customized bindings for local debugging and Azure Functions app deployments. Use the latest version or install the portable version |
     | &nbsp; | [Node.js and NPM](https://nodejs.org/) | Back-end JavaScript runtime environment. For more information, see [Node.js version compatibility table for project type](~/toolkit/build-environments.md#nodejs-version-compatibility-table-for-project-type).|
     | &nbsp; | [Microsoft Teams JavaScript client library (TeamsJS)](/javascript/api/overview/msteams-client) | You can install the package using npm or yarn. Use the latest version. |
     | &nbsp; | [Live Share SDK](https://github.com/microsoft/live-share-sdk) | Live Share enables collaborative app experiences. |
     | &nbsp; | Dev tunnel | Teams app features (conversational bots, message extensions, and incoming webhooks) need inbound connections. A tunnel connects your development system to Teams. Dev tunnel is a powerful tool to securely open your localhost to the internet and control who has access. Dev tunnel is available in Visual Studio 2022 version 17.7.0 or later. <br> or </br> You can also use [ngrok](https://ngrok.com/download) as a tunnel to connect your development system to Teams. It isn't required for apps that only include tabs. This package is installed within the project directory (using npm devDependencies). |
     
      > [!NOTE]
      > After downloading ngrok, sign up and install [authtoken](https://ngrok.com/download).

- title: Set up local environment
  durationInMinutes: 1
  content: | 

   [!INCLUDE [Set up local environment](includes/get-started/clone-repository.md)]

- title: Create and register your bot
  durationInMinutes: 5
  content: |
    To create and register your bot in Microsoft Azure Active Directory (Azure AD), perform the following steps:

    * Create Azure Bot resource to register bot with Azure Bot service.
    * Create client secret to enable single sign-on (SSO) authentication of the bot.
    * Add Teams channel to deploy the bot.
    * Create a ngrok or dev tunnel to your web server's endpoints.
    * Add messaging endpoint to the ngrok or dev tunnel you created.

    [!INCLUDE [Azure bot resource](includes/get-started/azure-bot-resource.md)]

    [!INCLUDE [Client secret](includes/get-started/create-client-secret.md)]

    [!INCLUDE [Teams channel](includes/get-started/add-teams-channel.md)]

    **Create a tunnel**

      # [dev tunnel](#tab/dev)

      [!INCLUDE [Tunnel](includes/get-started/dev-tunnel.md)]

      # [ngrok](#tab/ngrok)
      
      [!INCLUDE [Tunnel](includes/get-started/ngrok-tunnel.md)]

      ---     

    [!INCLUDE [messaging endpoint](includes/get-started/messaging-endpoint.md)]

- title: Update the Azure AD app registration
  durationInMinutes: 1
  content: |

    [!INCLUDE [Azure app registration](includes/get-started/azure-app-registration.md)]

    [!INCLUDE [Azure add scope](includes/get-started/azure-add-scope.md)]

    [!INCLUDE [Azure client application](includes/get-started/azure-client-application.md)]

    [!INCLUDE [API permission](includes/get-started/azure-api-permissions.md)]

    [!INCLUDE [Authentication](includes/get-started/azure-web-authentication.md)]

- title: Set up app settings and manifest files
  durationInMinutes: 1
  content: |
    1. Go to **appsettings.json** file in the cloned repository.

          :::image type="content" source="~/assets/images/meetings-side-panel/appsettingslocation_1.png" alt-text="Screenshot shows the appsettings JSON file with appsettings information.":::

    1. Open **appsettings.json** file in Visual Studio and update the following information:  

         * Replace `<<Microsoft-App-ID>>"` to your bot's **Microsoft App ID**.
         * Replace `"<<Microsoft-App-Secret>>"` to **Value** of your bot's **Client secret**.
         * Replace `<<Your_Domain_URL>>` to the ngrok or dev tunnel domain name.

          :::image type="content" source="~/assets/images/meetings-side-panel/appsettings_1.png" alt-text="Screenshot of appsettings JSON file with appsettings highlighted.":::
          
    1. Go to **manifest.json** file in the cloned repository.

         :::image type="content" source="~/assets/images/meetings-side-panel/manifestlocation_1.png" alt-text="Screenshot of Teams App Manifest folder with the file path and manifest file highlighted in red.":::
    
    1. Open **manifest.json** file in Visual Studio and make the following changes:

         * Replace `<<Manifest-id>>` to a unique manifest ID. You can also enter your **Microsoft App ID**.
         * Replace all occurrences of `{{domain-name}}` and `{{Base_URL}}` with your ngrok or dev tunnel domain name.
         * Replace all occurrences of `<<YOUR-MICROSOFT-APP-ID>>` with your bot's **Microsoft App ID**.

         :::image type="content" source="~/assets/images/meetings-side-panel/manifest-2_1.png" alt-text="Screenshot of ID and bot ID highlighted in red." lightbox="~\assets\images\meetings-side-panel\manifest-2_2.png":::

- title: Build and run the service
  durationInMinutes: 1
  content: |
    To build and run the service use Visual Studio or Command line:

    # [Visual Studio](#tab/vs)

       1. Open **Visual Studio**.
       1. Go to **File** > **Open** > **Project/Solution..**.
    
           :::image type="content" source="~/assets/images/meetings-side-panel/open-project1.png" alt-text="Screenshot of Visual Studio with the File, Open, and Project/Solution highlighted in red.":::

       1. Select **SidePanel.csproj** file from **csharp** folder.

           :::image type="content" source="~/assets/images/meetings-side-panel/Tokenfileready_1.png" alt-text="Screenshot of cloned repository with the SidePanel.csproj highlighted in red.":::

       1. Press **F5** to run the project. You can run the project using Visual Studio or .NET in the appropriate folder.

       1. Navigate to `samples\meetings-sidepanel\csharp\ClientApp` **folder** and execute the command.

           ```bash
           npx @fluidframework/azure-local-service@latest
           ```
    
       1. Select **Yes** if the following dialog appears:

            :::image type="content" source="~/assets/images/meetings-side-panel/certificate.png" alt-text="Screenshot of Security Warning with the Yes option highlighted in red.":::

          A webpage appears with a message **Your bot is ready!**

           :::image type="content" source="~/assets/images/meetings-side-panel/appisready_1.png" alt-text="Screenshot of the webpage that displays Your bot is ready!."::: 
 
    # [Command line](#tab/cli)

    Go to **samples > meetings-sidepanel > csharp > Side Panel** in a Command Prompt window and enter the following command:

    ```bash
    dotnet run
    ```
    :::image type="content" source="~/assets/images/meetings-side-panel/dotnetruncmd.png" alt-text="Screenshot of Command Prompt - dotnet run with the dotnet run command."::: 
      
- title: Add meeting side panel to Teams
  durationInMinutes: 1
  content: |

    1. In your cloned repository, go to **csharp > SidePanel > Manifest**.

    1. Create a .zip file with the following files that are present in the **manifest** folder: 
       * manifest.json
       * outline.png
       * color.png

         :::image type="content" source="~/assets/images/meetings-side-panel/zipfile_1.png" alt-text="Screenshot of cloned repository with the Side Manifest zip file highlighted in red."::: 
    
    1. Create a meeting with a few presenters and attendees.
   
    1. After the meeting is created, go to the meeting details page, and select the **Apps** icon to add an app.
 
    1. In the pop-up window, select **Manage apps**.

        :::image type="content" source="~/assets/images/meetings-side-panel/manageapps_1.png" alt-text="Screenshot of Teams Slide Panel with the add Apps icon and Manage apps option highlighted in red."::: 
   
    1. Select **Upload an app**.

        :::image type="content" source="~/assets/images/meetings-side-panel/uploadcustomapp_1.png" alt-text="Screenshot of a banner displayed to build your own app where the Upload a custom app option highlighted in red."::: 

    1. Select **Open** to upload the .zip file that you created in the **Manifest** folder.

        :::image type="content" source="~/assets/images/meetings-side-panel/selectzip_1.png" alt-text="Screenshot of the cloned repository with Side Manifest zip file and Open option highlighted in red."::: 

    1. Select **Add**.

        :::image type="content" source="~/assets/images/meetings-side-panel/add-the-app.png" alt-text="Screenshot of Side Panel in Teams with the Add option highlighted in red."::: 

       The **Manage apps** section displays the list of applications.
   
        :::image type="content" source="~/assets/images/meetings-side-panel/manageappsection_1.png" alt-text="Screenshot of Manage apps displaying the list of applications."::: 
   
    1. Go to Teams meeting.
    
    1. Select **Apps**. 
    
       In the app selection page, the **Side Panel** app is displayed.

    1. Select the **Side Panel** app.
  
        :::image type="content" source="~/assets/images/meetings-side-panel/appicon-2.png" alt-text="Screenshot with the side panel app highlighted in red."::: 

    1. Select **Save**.

        :::image type="content" source="~/assets/images/meetings-side-panel/welcomeapp_1.png" alt-text="Screenshot of Side Panel with Save option highlighted in red."::: 
   
       The app is visible in the meeting side panel.         

- title: Interact with the app in Teams
  durationInMinutes: 1
  content: |
    Let's interact with the app in Teams!

    1. Select **Add New Agenda Item** to add a new agenda to the default agenda list.

        :::image type="content" source="~/assets/images/meetings-side-panel/sidepanelinmeet_1.png" alt-text="Screenshot of Teams meeting displaying the addition of New Agenda highlighted in red."::: 

    1. Enter a new agenda item and select **Add**.

        :::image type="content" source="~/assets/images/meetings-side-panel/newagenda_1.png" alt-text="Screenshot of Teams meeting with Add option highlighted in red."::: 

       The new agenda is added to the list.

    1. Select **Publish Agenda**.

         :::image type="content" source="~/assets/images/meetings-side-panel/youragenda_1.png" alt-text="Screenshot of Teams meeting with Publish Agenda highlighted in red."::: 

       The new agenda list is displayed in the meeting chat.

         :::image type="content" source="~/assets/images/meetings-side-panel/agendainchat_1.png" alt-text="Screenshot of Teams meeting with the New Agenda list highlighted in red."::: 

- title: Complete challenge
  durationInMinutes: 1
  content: |
    Did you come up with output like this?

       :::image type="content" source="~/assets/images/meetings-side-panel/sidepanelondesktopmobile_1.png" alt-text="Screenshot of the meeting Side Panel output after you have successfully completed the step-by-step guide."::: 

- content: |
    You've completed the tutorial to get started with a **Side Panel** app!



{"version":3,"sources":["components/Dropdown/Dropdown.tsx"],"names":["dropdownClassName","dropdownSlotClassNames","clearIndicator","container","toggleIndicator","item","itemsList","searchInput","selectedItem","selectedItems","triggerButton","a11yStatusCleanupTime","charKeyPressedCleanupTime","normalizeValue","multiple","rawValue","normalizedValue","Array","isArray","slice","getFilteredValues","options","items","itemToString","itemToValue","search","searchQuery","value","filteredItemsByValue","filteredItemStrings","filteredItem","toLowerCase","filteredItems","filter","indexOf","isEmpty","prop","props","Dropdown","React","forwardRef","ref","context","displayName","telemetry","setStart","setEnd","ariaLabelledby","ariaInvalid","clearable","checkable","checkableIndicator","className","design","disabled","error","fluid","getA11ySelectionMessage","a11ySelectedItemsMessage","getA11yStatusMessage","inline","inverted","highlightFirstItemOnOpen","headerMessage","moveFocusOnTab","noResultsMessage","loading","loadingMessage","placeholder","renderItem","renderSelectedItem","styles","variables","align","flipBoundary","overflowBoundary","popperRef","position","positionFixed","offset","unstable_disableTether","unstable_pinned","autoSize","list","positioningProps","buttonRef","useRef","inputRef","listRef","selectedItemsRef","containerRef","defaultTriggerButtonId","useMemo","ElementType","unhandledProps","handledProps","defaultValue","defaultActiveSelectedIndex","initialValue","undefined","activeSelectedIndex","setActiveSelectedIndex","defaultHighlightedIndex","highlightedIndex","setHighlightedIndex","defaultOpen","open","setOpen","defaultSearchQuery","setSearchQuery","setValue","useState","a11ySelectionStatus","setA11ySelectionStatus","focused","setFocused","isFromKeyboard","setIsFromKeyboard","itemIsFromKeyboard","setItemIsFromKeyboard","startingString","setStartingString","mapPropsToStyles","isEmptyClearIndicator","hasToggleIndicator","hasItemsSelected","length","mapPropsToInlineStyles","rtl","classes","resolvedStyles","clearA11ySelectionMessage","clearStartingString","handleChange","e","handleOnBlur","target","current","renderTriggerButton","getToggleButtonProps","content","getSelectedItemAsString","triggerButtonId","triggerButtonProps","onFocus","handleTriggerButtonOrListFocus","onBlur","handleTriggerButtonBlur","onKeyDown","handleTriggerButtonKeyDown","l","join","onClick","restTriggerButtonProps","Button","defaultProps","id","overrideProps","predefinedProps","renderSearchInput","accessibilityComboboxProps","getInputProps","selectItemAtIndex","toggleMenu","noPlaceholder","DropdownSearchInput","create","handleSearchInputOverrides","renderItemsList","getMenuProps","getItemProps","renderItems","refKey","suppressRefError","innerRef","accessibilityMenuProps","accessibilityInputProps","handleListKeyDown","listElement","List","tabIndex","listProps","handleListBlur","footerItem","renderItemsListFooter","headerItem","renderItemsListHeader","index","children","selected","DropdownItem","active","hasOwnProperty","key","header","handleItemOverrides","render","push","renderSelectedItems","map","DropdownSelectedItem","isSelectedItemActive","handleSelectedItemOverrides","downshiftStateReducer","state","changes","activeElement","type","Downshift","stateChangeTypes","blurButton","isOpen","handleInputValueChange","inputValue","stateAndHelpers","itemSelected","setStateAndInvokeHandler","handleStateChange","newState","changeInput","shouldValueChange","shouldMenuClose","keyDownEnter","clickItem","shouldAddHighlightedIndex","isSameItemSelected","newValue","onAdd","setA11ySelectionMessage","defaultView","setTimeout","scrollTop","scrollHeight","tryFocusTriggerButton","keyDownEscape","keyDownArrowDown","keyDownArrowUp","highlightedIndexOnArrowKeyOpen","getHighlightedIndexOnArrowKeyOpen","focus","mouseUp","clickButton","keyDownSpaceButton","itemMouseEnter","unknown","handlers","Boolean","accessibilityItemProps","stopPropagation","nativeEvent","stopImmediatePropagation","onRemove","dropdownSelectedItemProps","handleSelectedItemRemove","handleSelectedItemKeyDown","handleInputBlur","searchInputProps","handleInputKeyDown","keyboardKey","Home","End","Tab","handleTabSelection","ArrowLeft","trySetLastSelectedItemAsActive","ArrowRight","Backspace","tryRemoveItemFromValue","Escape","onChange","node","onInputBlur","onInputKeyDown","preventDefault","selectionStart","selectionEnd","removeItemFromValue","handleClear","tryFocusSearchInput","handleContainerClick","accessibilityInputPropsKeyDown","keyCode","keyString","String","fromCharCode","test","setHighlightedIndexOnCharKeyDown","previousKey","nextKey","Delete","relatedTarget","newStartingString","newHighlightedIndex","startsWith","poppedItem","currentElement","pop","handlerNames","event","proposedValue","forEach","handlerName","isArrowUp","isArrowDown","itemsLength","useEffect","cancel","element","root","process","env","NODE_ENV","menu","nodeToScroll","actions","boundary","scrollMode","block","el","top","left","scrollLeft","getRootProps","accessibilityRootPropsRest","showClearIndicator","Box","accessibility","indicatorBehavior","role","screenReaderContainerStyles","propTypes","commonPropTypes","createCommon","PropTypes","number","bool","customPropTypes","shorthandAllowingChildren","string","oneOfType","itemShorthand","collectionShorthand","object","func","onOpenChange","onSearchQueryChange","onActiveSelectedIndexChange","onHighlightedIndexChange","oneOf","ALIGNMENTS","arrayOf","POSITIONS","AUTOSIZES","Object","keys","isValidElement","Item","SearchInput","SelectedItem"],"mappings":"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","sourcesContent":["import {\n  getElementType,\n  useAutoControlled,\n  useStyles,\n  useUnhandledProps,\n  useFluentContext,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { indicatorBehavior, AccessibilityAttributes, getCode, keyboardKey } from '@fluentui/accessibility';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport cx from 'classnames';\nimport computeScrollIntoView from 'compute-scroll-into-view';\n\nimport { ShorthandRenderFunction, ShorthandValue, ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport Downshift, {\n  DownshiftState,\n  StateChangeOptions,\n  A11yStatusMessageOptions,\n  GetMenuPropsOptions,\n  GetPropsCommonOptions,\n  GetInputPropsOptions,\n  GetToggleButtonPropsOptions,\n  GetItemPropsOptions,\n  ControllerStateAndHelpers,\n} from 'downshift';\nimport {\n  commonPropTypes,\n  UIComponentProps,\n  isFromKeyboard as detectIsFromKeyboard,\n  createShorthand,\n} from '../../utils';\nimport { List, ListProps } from '../List/List';\nimport { DropdownItem, DropdownItemProps } from './DropdownItem';\nimport { DropdownSelectedItem, DropdownSelectedItemProps } from './DropdownSelectedItem';\nimport { DropdownSearchInput, DropdownSearchInputProps } from './DropdownSearchInput';\nimport { Button, ButtonProps } from '../Button/Button';\nimport { screenReaderContainerStyles } from '../../utils/accessibility/Styles/accessibilityStyles';\nimport { Box, BoxProps } from '../Box/Box';\nimport { Portal } from '../Portal/Portal';\nimport {\n  ALIGNMENTS,\n  POSITIONS,\n  Popper,\n  PositioningProps,\n  PopperShorthandProps,\n  partitionPopperPropsFromShorthand,\n  AutoSize,\n  AUTOSIZES,\n} from '../../utils/positioner';\nimport { CloseIcon, ChevronDownIcon } from '@fluentui/react-icons-northstar';\n\nexport interface DownshiftA11yStatusMessageOptions<Item> extends Required<A11yStatusMessageOptions<Item>> {}\n\nexport interface DropdownSlotClassNames {\n  clearIndicator: string;\n  container: string;\n  toggleIndicator: string;\n  item: string;\n  itemsList: string;\n  searchInput: string;\n  selectedItem: string;\n  selectedItems: string;\n  triggerButton: string;\n}\n\nexport interface DropdownProps extends UIComponentProps<DropdownProps>, PositioningProps {\n  /** The index of the currently selected item, if the dropdown supports multiple selection. */\n  activeSelectedIndex?: number;\n\n  /** Identifies the element (or elements) that labels the current element. Will be passed to `triggerButton`. */\n  'aria-labelledby'?: AccessibilityAttributes['aria-labelledby'];\n\n  /** Indicates the entered value does not conform to the format expected by the application. Will be passed to `triggerButton`. */\n  'aria-invalid'?: AccessibilityAttributes['aria-invalid'];\n\n  /** A dropdown item can show a check indicator if it is selected. */\n  checkable?: boolean;\n\n  /** A slot for a selected indicator in the dropdown list. */\n  checkableIndicator?: ShorthandValue<BoxProps>;\n\n  /** A dropdown can be clearable to let users remove their selection. */\n  clearable?: boolean;\n\n  /** A slot for the clearing indicator. */\n  clearIndicator?: ShorthandValue<BoxProps>;\n\n  /** The initial value for the index of the currently selected item in a multiple selection. */\n  defaultActiveSelectedIndex?: number;\n\n  /** The initial value for 'open' in uncontrolled mode. */\n  defaultOpen?: boolean;\n\n  /** The initial list item index to highlight. */\n  defaultHighlightedIndex?: number;\n\n  /** The initial value for the search query if the dropdown has `search` enabled. */\n  defaultSearchQuery?: string;\n\n  /** The initial value (or value array if the array has multiple selection). */\n  defaultValue?: ShorthandValue<DropdownItemProps> | ShorthandCollection<DropdownItemProps>;\n\n  /** A dropdown can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** A dropdown can fill the width of its container. */\n  fluid?: boolean;\n\n  /** Object with callbacks for generating announcements for item selection and removal. */\n  getA11ySelectionMessage?: {\n    /**\n     * Callback that creates custom accessibility message a screen reader narrates on item added to selection.\n     * @param item - Dropdown added element.\n     */\n    onAdd?: (item: ShorthandValue<DropdownItemProps>) => string;\n    /**\n     * Callback that creates custom accessibility message a screen reader narrates on item removed from selection.\n     * @param item - Dropdown removed element.\n     */\n    onRemove?: (item: ShorthandValue<DropdownItemProps>) => string;\n  };\n\n  /** A label for selected items listbox. */\n  a11ySelectedItemsMessage?: string;\n\n  /**\n   * Callback that provides status announcement message with number of items in the list, using Arrow Up/Down keys to navigate through them and, if multiple, using Arrow Left/Right to navigate through selected items.\n   * @param messageGenerationProps - Object with properties to generate message from. See getA11yStatusMessage from Downshift repo.\n   */\n  getA11yStatusMessage?: (options: DownshiftA11yStatusMessageOptions<ShorthandValue<DropdownItemProps>>) => string;\n\n  /** A dropdown can highlight the first option when it opens. */\n  highlightFirstItemOnOpen?: boolean;\n\n  /** The index of the list item to highlight. */\n  highlightedIndex?: number;\n\n  /** A dropdown can be formatted to appear inline next to other elements. */\n  inline?: boolean;\n\n  /** A dropdown can have inverted colors. */\n  inverted?: boolean;\n\n  /** Array of props for generating list options (Dropdown.Item[]) and selected item labels (Dropdown.SelectedItem[]), if it's a multiple selection. */\n  items?: ShorthandCollection<DropdownItemProps>;\n\n  /**\n   * A function that converts an item to string. Used when dropdown has `search` enabled.\n   * By default, it:\n   * - returns the `header` property if it exists on an item\n   * - stringifies the item if it is a primitive type\n   */\n  itemToString?: (item: ShorthandValue<DropdownItemProps>) => string;\n\n  /** Used when comparing two items in multiple selection. Default comparison is by the header prop. */\n  itemToValue?: (item: ShorthandValue<DropdownItemProps>) => any;\n\n  /** A message to be displayed in the list header. */\n  headerMessage?: ShorthandValue<DropdownItemProps>;\n\n  /** A slot for dropdown list. */\n  list?: ShorthandValue<ListProps & { popper?: PopperShorthandProps }>;\n\n  /** A dropdown can show that it is currently loading data. */\n  loading?: boolean;\n\n  /** A message to be displayed in the list when the dropdown is loading. */\n  loadingMessage?: ShorthandValue<DropdownItemProps>;\n\n  /** When selecting an element with Tab, focus stays on the dropdown by default. If true, the focus will jump to next/previous element in DOM. Only available to multiple selection dropdowns. */\n  moveFocusOnTab?: boolean;\n\n  /** A dropdown can allow a user to select multiple items. */\n  multiple?: boolean;\n\n  /** A message to be displayed in the list when the dropdown has no items. */\n  noResultsMessage?: ShorthandValue<DropdownItemProps>;\n\n  /**\n   * Called when the dropdown's selected items index change.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and the new selected value(s).\n   */\n  onActiveSelectedIndexChange?: (event: React.MouseEvent | React.KeyboardEvent | null, data: DropdownProps) => void;\n\n  /**\n   * Called when the dropdown's highlighted index change.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and the new selected value(s).\n   */\n  onHighlightedIndexChange?: (event: React.MouseEvent | React.KeyboardEvent | null, data: DropdownProps) => void;\n\n  /**\n   * Called when the dropdown opens or closes.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `open` reflecting the new open state.\n   */\n  onOpenChange?: (event: React.MouseEvent | React.KeyboardEvent | null, data: DropdownProps) => void;\n\n  /**\n   * Called when the dropdown's search query changes.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `searchQuery` reflecting its new value.\n   */\n  onSearchQueryChange?: (event: React.MouseEvent | React.KeyboardEvent | null, data: DropdownProps) => void;\n\n  /**\n   * Called when the dropdown's selected item(s) change.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and the new selected value(s).\n   */\n  onChange?: (event: React.MouseEvent | React.KeyboardEvent | null, data: DropdownProps) => void;\n\n  /**\n   * Called when the focus moves out from dropdown.\n   * @param event - React's original SyntheticEvent.\n   */\n  onBlur?: (event: React.FocusEvent | null) => void;\n\n  /** A dropdown's open state can be controlled. */\n  open?: boolean;\n\n  /** A placeholder message for the input field. */\n  placeholder?: string;\n\n  /**\n   * A render function to customize how items are rendered in the dropdown.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderItem?: ShorthandRenderFunction<DropdownItemProps>;\n\n  /**\n   * A custom render function for the selected item. Only applicable with the `multiple` prop.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderSelectedItem?: ShorthandRenderFunction<DropdownSelectedItemProps>;\n\n  /** A dropdown can have a search field instead of trigger button. Can receive a custom search function that will replace the default equivalent. */\n  search?:\n    | boolean\n    | ((items: ShorthandCollection<DropdownItemProps>, searchQuery: string) => ShorthandCollection<DropdownItemProps>);\n\n  /** A search dropdown's input can be customized. */\n  searchInput?: ShorthandValue<DropdownSearchInputProps>;\n\n  /** Sets search query value (controlled mode). */\n  searchQuery?: string;\n\n  /** Controls the appearance of the indicator that shows/hides the list of items. */\n  toggleIndicator?: ShorthandValue<BoxProps>;\n\n  /** Controls the appearance of the trigger button if it's a selection dropdown (not a search). */\n  triggerButton?: ShorthandValue<ButtonProps>;\n\n  /** Sets the dropdown's currently selected value(s) in controlled mode. */\n  value?: ShorthandValue<DropdownItemProps> | ShorthandCollection<DropdownItemProps>;\n\n  /** Dropdown can have errors status  */\n  error?: boolean;\n}\n\nexport type DropdownStylesProps = Required<\n  Pick<DropdownProps, 'disabled' | 'error' | 'fluid' | 'inline' | 'inverted' | 'multiple' | 'position' | 'open'>\n> & {\n  focused: boolean;\n  isEmptyClearIndicator: boolean;\n  hasToggleIndicator: boolean;\n  isFromKeyboard: boolean;\n  search: boolean;\n  hasItemsSelected: boolean;\n};\n\ntype DropdownStateForInvoke = {\n  activeSelectedIndex?: number | null;\n  highlightedIndex?: number | null;\n  itemIsFromKeyboard?: boolean;\n  open?: boolean;\n  searchQuery?: string;\n  value?: ShorthandCollection<DropdownItemProps>;\n};\n\nexport const dropdownClassName = 'ui-dropdown';\nexport const dropdownSlotClassNames: DropdownSlotClassNames = {\n  clearIndicator: `${dropdownClassName}__clear-indicator`,\n  container: `${dropdownClassName}__container`,\n  toggleIndicator: `${dropdownClassName}__toggle-indicator`,\n  item: `${dropdownClassName}__item`,\n  itemsList: `${dropdownClassName}__items-list`,\n  searchInput: `${dropdownClassName}__searchinput`,\n  selectedItem: `${dropdownClassName}__selecteditem`,\n  selectedItems: `${dropdownClassName}__selected-items`,\n  triggerButton: `${dropdownClassName}__trigger-button`,\n};\n\nconst a11yStatusCleanupTime = 500;\nconst charKeyPressedCleanupTime = 500;\n\n/** `normalizedValue` should be normalized always as it can be received from props */\nfunction normalizeValue(multiple: boolean, rawValue: DropdownProps['value']): ShorthandCollection<DropdownItemProps> {\n  const normalizedValue = Array.isArray(rawValue) ? rawValue : [rawValue];\n\n  return multiple ? normalizedValue : normalizedValue.slice(0, 1);\n}\n\n/**\n * Used to compute the filtered items (by value and search query) and, if needed,\n * their string equivalents, in order to be used throughout the component.\n */\nfunction getFilteredValues(\n  options: Required<\n    Pick<DropdownProps, 'multiple' | 'items' | 'itemToValue' | 'itemToString' | 'search' | 'searchQuery'>\n  > & {\n    value: ShorthandCollection<DropdownItemProps>;\n  },\n) {\n  const { items, itemToString, itemToValue, multiple, search, searchQuery, value } = options;\n\n  const filteredItemsByValue = multiple ? _.differenceBy(items, value, itemToValue) : items;\n  const filteredItemStrings = _.map(filteredItemsByValue, filteredItem => itemToString(filteredItem).toLowerCase());\n\n  if (search) {\n    if (_.isFunction(search)) {\n      return {\n        filteredItems: search(filteredItemsByValue, searchQuery),\n        filteredItemStrings,\n      };\n    }\n\n    return {\n      filteredItems: filteredItemsByValue.filter(\n        item => itemToString(item).toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1,\n      ),\n      filteredItemStrings,\n    };\n  }\n\n  return {\n    filteredItems: filteredItemsByValue,\n    filteredItemStrings,\n  };\n}\n\nconst isEmpty = prop => {\n  return typeof prop === 'object' && !prop.props && !_.get(prop, 'children') && !_.get(prop, 'content');\n};\n\n/**\n * A Dropdown allows user to select one or more values from a list of options.\n * Can be created with search and multi-selection capabilities.\n *\n * @accessibility\n * Implements [ARIA Combo Box](https://www.w3.org/TR/wai-aria-practices-1.1/#combobox) design pattern, uses aria-live to announce state changes.\n * @accessibilityIssues\n * [Issue 991203: VoiceOver doesn't narrate properly elements in the input/combobox](https://bugs.chromium.org/p/chromium/issues/detail?id=991203)\n * [JAWS - ESC (ESCAPE) not closing collapsible listbox (dropdown) on first time #528](https://github.com/FreedomScientific/VFO-standards-support/issues/528)\n */\nexport const Dropdown = (React.forwardRef<HTMLDivElement, DropdownProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Dropdown.displayName, context.telemetry);\n\n  setStart();\n\n  const {\n    'aria-labelledby': ariaLabelledby,\n    'aria-invalid': ariaInvalid,\n    clearable,\n    clearIndicator,\n    checkable,\n    checkableIndicator,\n    className,\n    design,\n    disabled,\n    error,\n    fluid,\n    getA11ySelectionMessage,\n    a11ySelectedItemsMessage,\n    getA11yStatusMessage,\n    inline,\n    inverted,\n    itemToString,\n    itemToValue,\n    items,\n    highlightFirstItemOnOpen,\n    multiple,\n    headerMessage,\n    moveFocusOnTab,\n    noResultsMessage,\n    loading,\n    loadingMessage,\n    placeholder,\n    renderItem,\n    renderSelectedItem,\n    search,\n    searchInput,\n    styles,\n    toggleIndicator,\n    triggerButton,\n    variables,\n  } = props;\n\n  const {\n    align,\n    flipBoundary,\n    overflowBoundary,\n    popperRef,\n    position,\n    positionFixed,\n    offset,\n    unstable_disableTether,\n    unstable_pinned,\n    autoSize,\n  } = props; // PositioningProps passed directly to Dropdown\n  const [list, positioningProps] = partitionPopperPropsFromShorthand(props.list); // PositioningProps passed to Dropdown `list` prop's `popper` key\n\n  const buttonRef = React.useRef<HTMLElement>();\n  const inputRef = React.useRef<HTMLInputElement | undefined>() as React.MutableRefObject<HTMLInputElement | undefined>;\n  const listRef = React.useRef<HTMLElement>();\n  const selectedItemsRef = React.useRef<HTMLDivElement>();\n  const containerRef = React.useRef<HTMLDivElement>();\n\n  const defaultTriggerButtonId = React.useMemo(() => _.uniqueId('dropdown-trigger-button-'), []);\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Dropdown.handledProps, props);\n\n  const [activeSelectedIndex, setActiveSelectedIndex] = useAutoControlled<number | null | undefined>({\n    defaultValue: props.defaultActiveSelectedIndex,\n    initialValue: multiple ? null : undefined,\n    value: props.activeSelectedIndex,\n  });\n  const [highlightedIndex, setHighlightedIndex] = useAutoControlled<number | null>({\n    defaultValue: props.defaultHighlightedIndex,\n    initialValue: highlightFirstItemOnOpen ? 0 : null,\n    value: props.highlightedIndex,\n  });\n  const [open, setOpen] = useAutoControlled({\n    defaultValue: props.defaultOpen,\n    initialValue: false,\n    value: props.open,\n  });\n  const [searchQuery, setSearchQuery] = useAutoControlled<string | undefined>({\n    defaultValue: props.defaultSearchQuery,\n    initialValue: search ? '' : undefined,\n    value: props.searchQuery,\n  });\n  const [rawValue, setValue] = useAutoControlled({\n    defaultValue: props.defaultValue,\n    initialValue: [],\n    value: props.value,\n  });\n  const value = normalizeValue(multiple, rawValue);\n\n  const [a11ySelectionStatus, setA11ySelectionStatus] = React.useState('');\n  const [focused, setFocused] = React.useState(false);\n  const [isFromKeyboard, setIsFromKeyboard] = React.useState(false);\n  const [itemIsFromKeyboard, setItemIsFromKeyboard] = React.useState(false);\n  const [startingString, setStartingString] = React.useState<string | undefined>(search ? undefined : '');\n\n  const { filteredItems, filteredItemStrings } = getFilteredValues({\n    itemToString,\n    itemToValue,\n    items,\n    multiple,\n    search,\n    searchQuery,\n    value,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<DropdownStylesProps>(Dropdown.displayName, {\n    className: dropdownClassName,\n    mapPropsToStyles: () => ({\n      disabled,\n      error,\n      fluid,\n      focused,\n      isEmptyClearIndicator: isEmpty(clearIndicator),\n      hasToggleIndicator: !!toggleIndicator,\n      inline,\n      inverted,\n      isFromKeyboard,\n      multiple,\n      open,\n      position: positioningProps?.position ?? position,\n      search: !!search,\n      hasItemsSelected: value.length > 0,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const clearA11ySelectionMessage = React.useMemo(\n    () =>\n      _.debounce(() => {\n        setA11ySelectionStatus('');\n      }, a11yStatusCleanupTime),\n    [],\n  );\n  const clearStartingString = React.useMemo(\n    () =>\n      _.debounce(() => {\n        setStartingString('');\n      }, charKeyPressedCleanupTime),\n    [],\n  );\n\n  const handleChange = (e: React.SyntheticEvent) => {\n    // Dropdown component doesn't present any `input` component in markup, however all of our\n    // components should handle events transparently.\n    _.invoke(props, 'onChange', e, { ...props, value });\n  };\n\n  const handleOnBlur = (e: React.SyntheticEvent) => {\n    // Dropdown component doesn't present any `input` component in markup, however all of our\n    // components should handle events transparently.\n    if (e.target !== buttonRef.current) {\n      _.invoke(props, 'onBlur', e, props);\n    }\n  };\n\n  const renderTriggerButton = (getToggleButtonProps: (options?: GetToggleButtonPropsOptions) => any): JSX.Element => {\n    const content = getSelectedItemAsString(value[0]);\n    const triggerButtonId = triggerButton['id'] || defaultTriggerButtonId;\n\n    const triggerButtonProps = getToggleButtonProps({\n      disabled,\n      onFocus: handleTriggerButtonOrListFocus,\n      onBlur: handleTriggerButtonBlur,\n      onKeyDown: e => {\n        handleTriggerButtonKeyDown(e);\n      },\n      'aria-invalid': ariaInvalid,\n      'aria-label': undefined,\n      'aria-labelledby': [ariaLabelledby, triggerButtonId].filter(l => !!l).join(' '),\n      ...(open && { 'aria-expanded': true }),\n    });\n\n    const { onClick, onFocus, onBlur, onKeyDown, ...restTriggerButtonProps } = triggerButtonProps;\n\n    return (\n      <Ref innerRef={buttonRef}>\n        {createShorthand(Button, triggerButton, {\n          defaultProps: () => ({\n            className: dropdownSlotClassNames.triggerButton,\n            content,\n            disabled,\n            id: triggerButtonId,\n            fluid: true,\n            styles: resolvedStyles.triggerButton,\n            ...restTriggerButtonProps,\n          }),\n          overrideProps: (predefinedProps: ButtonProps) => ({\n            onClick: e => {\n              onClick(e);\n              _.invoke(predefinedProps, 'onClick', e, predefinedProps);\n            },\n            onFocus: e => {\n              onFocus(e);\n              _.invoke(predefinedProps, 'onFocus', e, predefinedProps);\n            },\n            onBlur: e => {\n              if (!disabled) {\n                onBlur(e);\n              }\n\n              _.invoke(predefinedProps, 'onBlur', e, predefinedProps);\n            },\n            onKeyDown: e => {\n              if (!disabled) {\n                onKeyDown(e);\n              }\n\n              _.invoke(predefinedProps, 'onKeyDown', e, predefinedProps);\n            },\n          }),\n        })}\n      </Ref>\n    );\n  };\n\n  const renderSearchInput = (\n    accessibilityComboboxProps: Object,\n    highlightedIndex: number,\n    getInputProps: (options?: GetInputPropsOptions) => any,\n    selectItemAtIndex: (index: number, otherStateToSet?: Partial<StateChangeOptions<any>>, cb?: () => void) => void,\n    toggleMenu: () => void,\n    variables,\n  ): JSX.Element => {\n    const noPlaceholder = searchQuery.length > 0 || (multiple && value.length > 0);\n\n    return DropdownSearchInput.create(searchInput || {}, {\n      defaultProps: () => ({\n        className: dropdownSlotClassNames.searchInput,\n        placeholder: noPlaceholder ? '' : placeholder,\n        inline,\n        variables,\n        disabled,\n      }),\n      overrideProps: handleSearchInputOverrides(\n        highlightedIndex,\n        selectItemAtIndex,\n        toggleMenu,\n        accessibilityComboboxProps,\n        getInputProps,\n      ),\n    });\n  };\n\n  const renderItemsList = (\n    highlightedIndex: number,\n    toggleMenu: () => void,\n    selectItemAtIndex: (index: number) => void,\n    getMenuProps: (options?: GetMenuPropsOptions, otherOptions?: GetPropsCommonOptions) => any,\n    getItemProps: (options: GetItemPropsOptions<ShorthandValue<DropdownItemProps>>) => any,\n    getInputProps: (options?: GetInputPropsOptions) => any,\n  ) => {\n    const items = open ? renderItems(getItemProps) : [];\n    const { innerRef, ...accessibilityMenuProps } = getMenuProps({ refKey: 'innerRef' }, { suppressRefError: true });\n\n    // If it's just a selection, some attributes and listeners from Downshift input need to go on the menu list.\n    if (!search) {\n      const accessibilityInputProps = getInputProps();\n\n      accessibilityMenuProps['aria-activedescendant'] = accessibilityInputProps['aria-activedescendant'];\n      accessibilityMenuProps['onKeyDown'] = e => {\n        handleListKeyDown(e, highlightedIndex, accessibilityInputProps['onKeyDown'], toggleMenu, selectItemAtIndex);\n      };\n    }\n\n    return (\n      <Ref\n        innerRef={(listElement: HTMLElement) => {\n          handleRef(listRef, listElement);\n          handleRef(innerRef, listElement);\n        }}\n      >\n        <Popper\n          rtl={context.rtl}\n          enabled={open}\n          targetRef={containerRef}\n          positioningDependencies={[items.length]}\n          // positioning props:\n          align={align}\n          flipBoundary={flipBoundary}\n          overflowBoundary={overflowBoundary}\n          popperRef={popperRef}\n          position={position}\n          positionFixed={positionFixed}\n          offset={offset}\n          unstable_disableTether={unstable_disableTether}\n          unstable_pinned={unstable_pinned}\n          autoSize={autoSize}\n          {...positioningProps}\n        >\n          {List.create(list, {\n            defaultProps: () => ({\n              className: dropdownSlotClassNames.itemsList,\n              ...accessibilityMenuProps,\n              styles: resolvedStyles.list,\n              items,\n              tabIndex: search ? undefined : -1, // needs to be focused when trigger button is activated.\n              'aria-hidden': !open,\n            }),\n\n            overrideProps: (predefinedProps: ListProps) => ({\n              onFocus: (e: React.SyntheticEvent<HTMLElement>, listProps: ListProps) => {\n                handleTriggerButtonOrListFocus();\n                _.invoke(predefinedProps, 'onClick', e, listProps);\n              },\n              onBlur: (e: React.SyntheticEvent<HTMLElement>, listProps: ListProps) => {\n                handleListBlur(e);\n                _.invoke(predefinedProps, 'onBlur', e, listProps);\n              },\n            }),\n          })}\n        </Popper>\n      </Ref>\n    );\n  };\n\n  const renderItems = (getItemProps: (options: GetItemPropsOptions<ShorthandValue<DropdownItemProps>>) => any) => {\n    const footerItem = renderItemsListFooter();\n    const headerItem = renderItemsListHeader();\n\n    const items = _.map(filteredItems, (item, index) => ({\n      children: () => {\n        const selected = value.indexOf(item) !== -1;\n\n        return DropdownItem.create(item, {\n          defaultProps: () => ({\n            className: dropdownSlotClassNames.item,\n            active: highlightedIndex === index,\n            selected,\n            checkable,\n            checkableIndicator,\n            isFromKeyboard: itemIsFromKeyboard,\n            variables,\n            ...(typeof item === 'object' &&\n              !item.hasOwnProperty('key') && {\n                key: (item as any).header,\n              }),\n          }),\n          overrideProps: handleItemOverrides(item, index, getItemProps, selected),\n          render: renderItem,\n        });\n      },\n    }));\n\n    if (footerItem) {\n      items.push(footerItem);\n    }\n\n    return headerItem ? [headerItem, ...items] : items;\n  };\n\n  const renderItemsListHeader = () => {\n    if (headerMessage) {\n      return {\n        children: () =>\n          DropdownItem.create(headerMessage, {\n            defaultProps: () => ({\n              key: 'items-list-footer-message',\n              styles: resolvedStyles.headerMessage,\n            }),\n          }),\n      };\n    }\n\n    return null;\n  };\n\n  const renderItemsListFooter = () => {\n    if (loading) {\n      return {\n        children: () =>\n          DropdownItem.create(loadingMessage, {\n            defaultProps: () => ({\n              key: 'loading-message',\n              styles: resolvedStyles.loadingMessage,\n            }),\n          }),\n      };\n    }\n\n    if (filteredItems && filteredItems.length === 0) {\n      return {\n        children: () =>\n          DropdownItem.create(noResultsMessage, {\n            defaultProps: () => ({\n              key: 'no-results-message',\n              styles: resolvedStyles.noResultsMessage,\n            }),\n          }),\n      };\n    }\n\n    return null;\n  };\n\n  const renderSelectedItems = () => {\n    if (value.length === 0) {\n      return null;\n    }\n\n    const selectedItems = value.map((item: DropdownItemProps, index) =>\n      // (!) an item matches DropdownItemProps\n      DropdownSelectedItem.create(item, {\n        defaultProps: () => ({\n          className: dropdownSlotClassNames.selectedItem,\n          active: isSelectedItemActive(index),\n          variables,\n          ...(typeof item === 'object' &&\n            !item.hasOwnProperty('key') && {\n              key: (item as any).header,\n            }),\n        }),\n        overrideProps: handleSelectedItemOverrides(item),\n        render: renderSelectedItem,\n      }),\n    );\n    return (\n      <div role=\"listbox\" tabIndex={-1} aria-label={a11ySelectedItemsMessage}>\n        {selectedItems}\n      </div>\n    );\n  };\n\n  const downshiftStateReducer = (\n    state: DownshiftState<ShorthandValue<DropdownItemProps>>,\n    changes: StateChangeOptions<ShorthandValue<DropdownItemProps>>,\n  ) => {\n    const activeElement: Element = context.target.activeElement;\n\n    switch (changes.type) {\n      case Downshift.stateChangeTypes.blurButton:\n        // Downshift closes the list by default on trigger blur. It does not support the case when dropdown is\n        // single selection and focuses list on trigger click/up/down/space/enter. Treating that here.\n        if (state.isOpen && activeElement === listRef.current) {\n          return {}; // won't change state in this case.\n        }\n        _.invoke(props, 'onBlur', null);\n      default:\n        return changes;\n    }\n  };\n\n  const handleInputValueChange = (\n    inputValue: string,\n    stateAndHelpers: ControllerStateAndHelpers<ShorthandValue<DropdownItemProps>>,\n  ) => {\n    const itemSelected = stateAndHelpers.selectedItem && inputValue === itemToString(stateAndHelpers.selectedItem);\n    if (\n      inputValue !== searchQuery &&\n      !itemSelected // when item is selected, `handleStateChange` will update searchQuery.\n    ) {\n      setStateAndInvokeHandler(['onSearchQueryChange'], null, {\n        searchQuery: inputValue,\n      });\n    }\n  };\n\n  const handleStateChange = (changes: StateChangeOptions<ShorthandValue<DropdownItemProps>>) => {\n    const { type } = changes;\n    const newState = {} as DropdownStateForInvoke;\n\n    switch (type) {\n      case Downshift.stateChangeTypes.changeInput: {\n        const shouldValueChange = changes.inputValue === '' && !multiple && value.length > 0;\n\n        newState.highlightedIndex = highlightFirstItemOnOpen ? 0 : null;\n\n        if (shouldValueChange) {\n          newState.value = [];\n        }\n\n        if (open) {\n          // we clear value when in single selection user cleared the query.\n          const shouldMenuClose = changes.inputValue === '' || changes.selectedItem !== undefined;\n\n          if (shouldMenuClose) {\n            newState.open = false;\n          }\n        } else {\n          newState.open = true;\n        }\n\n        break;\n      }\n      case Downshift.stateChangeTypes.keyDownEnter:\n      case Downshift.stateChangeTypes.clickItem:\n        const shouldAddHighlightedIndex = !multiple && items && items.length > 0;\n        const isSameItemSelected = changes.selectedItem === undefined;\n        const newValue = isSameItemSelected ? value[0] : changes.selectedItem;\n\n        newState.searchQuery = getSelectedItemAsString(newValue);\n        newState.open = false;\n        newState.highlightedIndex = shouldAddHighlightedIndex ? items.indexOf(newValue) : null;\n\n        if (!isSameItemSelected) {\n          newState.value = multiple ? [...value, changes.selectedItem] : [changes.selectedItem];\n\n          if (getA11ySelectionMessage && getA11ySelectionMessage.onAdd) {\n            setA11ySelectionMessage(getA11ySelectionMessage.onAdd(newValue));\n          }\n        }\n\n        if (multiple) {\n          context.target?.defaultView.setTimeout(\n            () => (selectedItemsRef.current.scrollTop = selectedItemsRef.current.scrollHeight),\n            0,\n          );\n        }\n\n        // timeout because of NVDA, otherwise it narrates old button value/state\n        context.target?.defaultView.setTimeout(() => tryFocusTriggerButton(), 100);\n\n        break;\n      case Downshift.stateChangeTypes.keyDownEscape:\n        if (search && !multiple) {\n          newState.value = [];\n        }\n        newState.open = false;\n        newState.highlightedIndex = highlightFirstItemOnOpen ? 0 : null;\n        break;\n      case Downshift.stateChangeTypes.keyDownArrowDown:\n      case Downshift.stateChangeTypes.keyDownArrowUp:\n        if (changes.isOpen !== undefined) {\n          newState.open = changes.isOpen;\n          newState.highlightedIndex = changes.highlightedIndex;\n\n          if (changes.isOpen) {\n            const highlightedIndexOnArrowKeyOpen = getHighlightedIndexOnArrowKeyOpen(changes);\n\n            if (_.isNumber(highlightedIndexOnArrowKeyOpen)) {\n              newState.highlightedIndex = highlightedIndexOnArrowKeyOpen;\n            }\n\n            if (!search) {\n              listRef.current.focus();\n            }\n          } else {\n            newState.highlightedIndex = null;\n          }\n        }\n      case Downshift.stateChangeTypes['keyDownHome']:\n      case Downshift.stateChangeTypes['keyDownEnd']:\n        if (open && _.isNumber(changes.highlightedIndex)) {\n          newState.highlightedIndex = changes.highlightedIndex;\n          newState.itemIsFromKeyboard = true;\n        }\n\n        break;\n      case Downshift.stateChangeTypes.mouseUp:\n        if (open) {\n          newState.open = false;\n          newState.highlightedIndex = null;\n        }\n\n        break;\n      case Downshift.stateChangeTypes.clickButton:\n      case Downshift.stateChangeTypes.keyDownSpaceButton:\n        newState.open = changes.isOpen;\n\n        if (changes.isOpen) {\n          const highlightedIndexOnArrowKeyOpen = getHighlightedIndexOnArrowKeyOpen(changes);\n\n          if (_.isNumber(highlightedIndexOnArrowKeyOpen)) {\n            newState.highlightedIndex = highlightedIndexOnArrowKeyOpen;\n          }\n\n          if (!search) {\n            listRef.current.focus();\n          }\n        } else {\n          newState.highlightedIndex = null;\n        }\n        break;\n      case Downshift.stateChangeTypes.itemMouseEnter:\n        newState.highlightedIndex = changes.highlightedIndex;\n        newState.itemIsFromKeyboard = false;\n        break;\n      case Downshift.stateChangeTypes.unknown:\n        if (changes.selectedItem) {\n          newState.value = multiple ? [...value, changes.selectedItem] : [changes.selectedItem];\n          newState.searchQuery = multiple ? '' : changes.inputValue;\n          newState.open = false;\n          newState.highlightedIndex = changes.highlightedIndex;\n\n          tryFocusTriggerButton();\n        } else {\n          newState.open = changes.isOpen;\n        }\n      default:\n        break;\n    }\n\n    if (_.isEmpty(newState)) {\n      return;\n    }\n\n    const handlers: (keyof DropdownProps)[] = [\n      newState.highlightedIndex !== undefined && 'onHighlightedIndexChange',\n      newState.open !== undefined && 'onOpenChange',\n      newState.searchQuery !== undefined && 'onSearchQueryChange',\n      newState.value !== undefined && 'onChange',\n    ].filter(Boolean) as (keyof DropdownProps)[];\n\n    setStateAndInvokeHandler(handlers, null, newState);\n  };\n\n  const isSelectedItemActive = (index: number): boolean => {\n    return index === activeSelectedIndex;\n  };\n\n  const handleItemOverrides = (\n    item: ShorthandValue<DropdownItemProps>,\n    index: number,\n    getItemProps: (options: GetItemPropsOptions<ShorthandValue<DropdownItemProps>>) => any,\n    selected: boolean,\n  ) => (predefinedProps: DropdownItemProps) => ({\n    accessibilityItemProps: {\n      ...getItemProps({\n        item,\n        index,\n        disabled: item['disabled'],\n        onClick: e => {\n          e.stopPropagation();\n          e.nativeEvent.stopImmediatePropagation();\n          _.invoke(predefinedProps, 'onClick', e, predefinedProps);\n        },\n      }),\n      // for single selection the selected item should have aria-selected, instead of the highlighted\n      ...(!multiple && {\n        'aria-selected': selected,\n      }),\n    },\n  });\n\n  const handleSelectedItemOverrides = (item: ShorthandValue<DropdownItemProps>) => (\n    predefinedProps: DropdownSelectedItemProps,\n  ) => ({\n    onRemove: (e: React.SyntheticEvent, dropdownSelectedItemProps: DropdownSelectedItemProps) => {\n      handleSelectedItemRemove(e, item, predefinedProps, dropdownSelectedItemProps);\n    },\n    onClick: (e: React.SyntheticEvent, dropdownSelectedItemProps: DropdownSelectedItemProps) => {\n      setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n        activeSelectedIndex: value.indexOf(item),\n      });\n      e.stopPropagation();\n      _.invoke(predefinedProps, 'onClick', e, dropdownSelectedItemProps);\n    },\n    onKeyDown: (e: React.KeyboardEvent, dropdownSelectedItemProps: DropdownSelectedItemProps) => {\n      handleSelectedItemKeyDown(e, item, predefinedProps, dropdownSelectedItemProps);\n    },\n  });\n\n  const handleSearchInputOverrides = (\n    highlightedIndex: number,\n    selectItemAtIndex: (index: number, otherStateToSet?: Partial<StateChangeOptions<any>>, cb?: () => void) => void,\n    toggleMenu: () => void,\n    accessibilityComboboxProps: Object,\n    getInputProps: (options?: GetInputPropsOptions) => any,\n  ) => (predefinedProps: DropdownSearchInputProps) => {\n    const handleInputBlur = (e: React.SyntheticEvent, searchInputProps: DropdownSearchInputProps) => {\n      if (!disabled) {\n        setFocused(false);\n        setIsFromKeyboard(detectIsFromKeyboard());\n\n        e.nativeEvent['preventDownshiftDefault'] = true;\n      }\n\n      _.invoke(predefinedProps, 'onInputBlur', e, searchInputProps);\n    };\n\n    const handleInputKeyDown = (\n      e: React.KeyboardEvent<HTMLInputElement>,\n      searchInputProps: DropdownSearchInputProps,\n    ) => {\n      if (!disabled) {\n        switch (getCode(e)) {\n          // https://github.com/downshift-js/downshift/issues/1097\n          // Downshift skips Home/End if Deopdown is opened\n          case keyboardKey.Home:\n            e.nativeEvent['preventDownshiftDefault'] = filteredItems.length === 0;\n            break;\n          case keyboardKey.End:\n            e.nativeEvent['preventDownshiftDefault'] = filteredItems.length === 0;\n            break;\n          case keyboardKey.Tab:\n            e.stopPropagation();\n            handleTabSelection(e, highlightedIndex, selectItemAtIndex, toggleMenu);\n            break;\n          case keyboardKey.ArrowLeft:\n            e.stopPropagation();\n            if (!context.rtl) {\n              trySetLastSelectedItemAsActive();\n            }\n            break;\n          case keyboardKey.ArrowRight:\n            e.stopPropagation();\n            if (context.rtl) {\n              trySetLastSelectedItemAsActive();\n            }\n            break;\n          case keyboardKey.Backspace:\n            e.stopPropagation();\n            tryRemoveItemFromValue();\n            break;\n          case keyboardKey.Escape:\n            // If dropdown list is open ESC should close it and not propagate to the parent\n            // otherwise event should propagate\n            if (open) {\n              e.stopPropagation();\n            }\n          default:\n            break;\n        }\n      }\n\n      _.invoke(predefinedProps, 'onInputKeyDown', e, {\n        ...searchInputProps,\n        highlightedIndex,\n        selectItemAtIndex,\n      });\n    };\n\n    return {\n      // getInputProps adds Downshift handlers. We also add our own by passing them as params to that function.\n      // user handlers were also added to our handlers previously, at the beginning of this function.\n      accessibilityInputProps: {\n        ...getInputProps({\n          disabled,\n          onBlur: e => {\n            handleInputBlur(e, predefinedProps);\n          },\n          onKeyDown: e => {\n            handleInputKeyDown(e, predefinedProps);\n          },\n          onChange: (e: React.ChangeEvent<HTMLInputElement>) => {\n            // we prevent the onChange input event to bubble up to our Dropdown handler,\n            // since in Dropdown it gets handled as onSearchQueryChange.\n            e.stopPropagation();\n\n            // A state modification should be triggered there otherwise it will go to an another frame and will break\n            // cursor position:\n            // https://github.com/facebook/react/issues/955#issuecomment-469352730\n            setSearchQuery(e.target.value);\n          },\n          'aria-labelledby': ariaLabelledby,\n        }),\n      },\n      // same story as above for getRootProps.\n      accessibilityComboboxProps,\n\n      inputRef: (node: HTMLInputElement) => {\n        handleRef(predefinedProps.inputRef, node);\n        inputRef.current = node;\n      },\n      onFocus: (e: React.FocusEvent, searchInputProps: DropdownSearchInputProps) => {\n        if (!disabled) {\n          setFocused(true);\n          setIsFromKeyboard(detectIsFromKeyboard());\n        }\n\n        _.invoke(predefinedProps, 'onFocus', e, searchInputProps);\n      },\n      onInputBlur: (e: React.FocusEvent, searchInputProps: DropdownSearchInputProps) => {\n        handleInputBlur(e, searchInputProps);\n      },\n      onInputKeyDown: (e: React.KeyboardEvent<HTMLInputElement>, searchInputProps: DropdownSearchInputProps) => {\n        handleInputKeyDown(e, searchInputProps);\n      },\n    };\n  };\n\n  /**\n   * Custom Tab selection logic, at least until Downshift will implement selection on blur.\n   * Also keeps focus on multiple selection dropdown when selecting by Tab.\n   */\n  const handleTabSelection = (\n    e: React.SyntheticEvent,\n    highlightedIndex: number,\n    selectItemAtIndex: (highlightedIndex: number) => void,\n    toggleMenu: () => void,\n  ): void => {\n    if (open) {\n      if (!_.isNil(highlightedIndex) && filteredItems.length && !items[highlightedIndex]['disabled']) {\n        selectItemAtIndex(highlightedIndex);\n\n        if (multiple && !moveFocusOnTab) {\n          e.preventDefault();\n        }\n      } else {\n        toggleMenu();\n      }\n    }\n  };\n\n  const trySetLastSelectedItemAsActive = () => {\n    if (!multiple || (inputRef.current && inputRef.current.selectionStart !== 0)) {\n      return;\n    }\n\n    if (value.length > 0) {\n      // If last element was already active, perform a 'reset' of activeSelectedIndex.\n      if (activeSelectedIndex === value.length - 1) {\n        setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n          activeSelectedIndex: value.length - 1,\n        });\n      } else {\n        setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n          activeSelectedIndex: value.length - 1,\n        });\n      }\n    }\n  };\n\n  const tryRemoveItemFromValue = () => {\n    if (\n      multiple &&\n      (searchQuery === '' || (inputRef.current.selectionStart === 0 && inputRef.current.selectionEnd === 0)) &&\n      value.length > 0\n    ) {\n      removeItemFromValue();\n    }\n  };\n\n  const handleClear = (e: React.SyntheticEvent<HTMLElement>) => {\n    setStateAndInvokeHandler(['onChange', 'onActiveSelectedIndexChange', 'onHighlightedIndexChange'], e, {\n      activeSelectedIndex: multiple ? null : undefined,\n      highlightedIndex: highlightFirstItemOnOpen ? 0 : null,\n      open: false,\n      searchQuery: search ? '' : undefined,\n      value: [],\n    });\n\n    tryFocusSearchInput();\n    tryFocusTriggerButton();\n  };\n\n  const handleContainerClick = () => {\n    tryFocusSearchInput();\n  };\n\n  const handleTriggerButtonKeyDown = (e: React.KeyboardEvent) => {\n    switch (getCode(e)) {\n      case keyboardKey.ArrowLeft:\n        if (!context.rtl) {\n          trySetLastSelectedItemAsActive();\n        }\n        return;\n      case keyboardKey.ArrowRight:\n        if (context.rtl) {\n          trySetLastSelectedItemAsActive();\n        }\n        return;\n      default:\n        return;\n    }\n  };\n\n  const handleListKeyDown = (\n    e: React.KeyboardEvent,\n    highlightedIndex: number,\n    accessibilityInputPropsKeyDown: (e) => any,\n    toggleMenu: () => void,\n    selectItemAtIndex: (index: number) => void,\n  ) => {\n    const keyCode = getCode(e);\n    switch (keyCode) {\n      case keyboardKey.Tab:\n        handleTabSelection(e, highlightedIndex, selectItemAtIndex, toggleMenu);\n        return;\n      case keyboardKey.Escape:\n        accessibilityInputPropsKeyDown(e);\n        tryFocusTriggerButton();\n        e.stopPropagation();\n        return;\n      default:\n        const keyString = String.fromCharCode(keyCode);\n        if (/[a-zA-Z0-9]/.test(keyString)) {\n          setHighlightedIndexOnCharKeyDown(keyString);\n        }\n        accessibilityInputPropsKeyDown(e);\n        return;\n    }\n  };\n\n  const handleSelectedItemKeyDown = (\n    e: React.KeyboardEvent,\n    item: ShorthandValue<DropdownItemProps>,\n    predefinedProps: DropdownSelectedItemProps,\n    dropdownSelectedItemProps: DropdownSelectedItemProps,\n  ) => {\n    const previousKey = context.rtl ? keyboardKey.ArrowRight : keyboardKey.ArrowLeft;\n    const nextKey = context.rtl ? keyboardKey.ArrowLeft : keyboardKey.ArrowRight;\n\n    switch (getCode(e)) {\n      case keyboardKey.Delete:\n      case keyboardKey.Backspace:\n        handleSelectedItemRemove(e, item, predefinedProps, dropdownSelectedItemProps);\n        break;\n      case previousKey:\n        if (value.length > 0 && !_.isNil(activeSelectedIndex) && activeSelectedIndex > 0) {\n          setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n            activeSelectedIndex: activeSelectedIndex - 1,\n          });\n        }\n        break;\n      case nextKey:\n        if (value.length > 0 && !_.isNil(activeSelectedIndex)) {\n          if (activeSelectedIndex < value.length - 1) {\n            setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n              activeSelectedIndex: activeSelectedIndex + 1,\n            });\n          } else {\n            setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n              activeSelectedIndex: null,\n            });\n\n            if (search) {\n              e.preventDefault(); // prevents caret to forward one position in input.\n              inputRef.current.focus();\n            } else {\n              buttonRef.current.focus();\n            }\n          }\n        }\n        break;\n      default:\n        break;\n    }\n    _.invoke(predefinedProps, 'onKeyDown', e, dropdownSelectedItemProps);\n  };\n\n  const handleTriggerButtonOrListFocus = () => {\n    setFocused(true);\n    setIsFromKeyboard(detectIsFromKeyboard());\n  };\n\n  const handleTriggerButtonBlur = e => {\n    if (listRef.current !== e.relatedTarget) {\n      setFocused(false);\n      setIsFromKeyboard(detectIsFromKeyboard());\n    }\n  };\n\n  const handleListBlur = e => {\n    if (buttonRef.current !== e.relatedTarget) {\n      setFocused(false);\n      setIsFromKeyboard(detectIsFromKeyboard());\n    }\n  };\n\n  /**\n   * Sets highlightedIndex to be the item that starts with the character keys the\n   * user has typed. Only used in non-search dropdowns.\n   *\n   * @param keystring - The string the item needs to start with. It is composed by typing keys in fast succession.\n   */\n  const setHighlightedIndexOnCharKeyDown = (keyString: string): void => {\n    const newStartingString = `${startingString}${keyString.toLowerCase()}`;\n    let newHighlightedIndex = -1;\n\n    setStartingString(newStartingString);\n    clearStartingString();\n\n    if (_.isNumber(highlightedIndex)) {\n      newHighlightedIndex = _.findIndex(\n        filteredItemStrings,\n        item => item.startsWith(newStartingString),\n        highlightedIndex + (startingString.length > 0 ? 0 : 1),\n      );\n    }\n\n    if (newHighlightedIndex < 0) {\n      newHighlightedIndex = _.findIndex(filteredItemStrings, item => item.startsWith(newStartingString));\n    }\n\n    if (newHighlightedIndex >= 0) {\n      setStateAndInvokeHandler(['onHighlightedIndexChange'], null, {\n        highlightedIndex: newHighlightedIndex,\n      });\n    }\n  };\n\n  const handleSelectedItemRemove = (\n    e: React.SyntheticEvent,\n    item: ShorthandValue<DropdownItemProps>,\n    predefinedProps: DropdownSelectedItemProps,\n    dropdownSelectedItemProps: DropdownSelectedItemProps,\n  ) => {\n    setStateAndInvokeHandler(['onActiveSelectedIndexChange'], null, {\n      activeSelectedIndex: null,\n    });\n    removeItemFromValue(item);\n    tryFocusSearchInput();\n    tryFocusTriggerButton();\n    _.invoke(predefinedProps, 'onRemove', e, dropdownSelectedItemProps);\n  };\n\n  const removeItemFromValue = (item?: ShorthandValue<DropdownItemProps>) => {\n    let poppedItem = item;\n    let newValue = [...value];\n\n    if (poppedItem) {\n      newValue = newValue.filter(currentElement => currentElement !== item);\n    } else {\n      poppedItem = newValue.pop();\n    }\n\n    if (getA11ySelectionMessage && getA11ySelectionMessage.onRemove) {\n      setA11ySelectionMessage(getA11ySelectionMessage.onRemove(poppedItem));\n    }\n\n    setStateAndInvokeHandler(['onChange'], null, { value: newValue });\n  };\n\n  /**\n   * Calls setState and invokes event handler exposed to user.\n   * We don't have the event object for most events coming from Downshift se we send an empty event\n   * because we want to keep the event handling interface\n   */\n  const setStateAndInvokeHandler = (\n    handlerNames: (keyof DropdownProps)[],\n    event: React.SyntheticEvent<HTMLElement>,\n    newState: DropdownStateForInvoke,\n  ) => {\n    const proposedValue = _.isNil(newState.value) ? value : newState.value;\n    // `proposedValue` should be normalized for single/multiple variations, `null` condition is\n    // required as first item can be undefined\n    const newValue = multiple ? proposedValue : proposedValue[0] || null;\n\n    if (newState.hasOwnProperty('activeSelectedIndex')) {\n      setActiveSelectedIndex(newState.activeSelectedIndex);\n    }\n    if (newState.hasOwnProperty('highlightedIndex')) {\n      setHighlightedIndex(newState.highlightedIndex);\n    }\n    if (newState.hasOwnProperty('itemIsFromKeyboard')) {\n      setItemIsFromKeyboard(newState.itemIsFromKeyboard);\n    }\n    if (newState.hasOwnProperty('open')) {\n      setOpen(newState.open);\n    }\n    if (newState.hasOwnProperty('searchQuery')) {\n      setSearchQuery(newState.searchQuery);\n    }\n    if (newState.hasOwnProperty('value')) {\n      setValue(newState.value);\n    }\n\n    handlerNames.forEach(handlerName => {\n      _.invoke(props, handlerName, event, { ...props, ...newState, value: newValue });\n    });\n  };\n\n  const tryFocusTriggerButton = () => {\n    if (!search && buttonRef.current) {\n      buttonRef.current.focus();\n    }\n  };\n\n  const tryFocusSearchInput = () => {\n    if (search && inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  /**\n   * If there is no value we use the placeholder value\n   * otherwise, for single selection we convert the value with itemToString\n   * and for multiple selection we return empty string, the values are rendered by renderSelectedItems\n   */\n  const getSelectedItemAsString = (value: ShorthandValue<DropdownItemProps>): string => {\n    if (!value) {\n      return search ? '' : placeholder;\n    }\n\n    if (multiple) {\n      return '';\n    }\n\n    return itemToString(value);\n  };\n\n  const getHighlightedIndexOnArrowKeyOpen = (\n    changes: StateChangeOptions<ShorthandValue<DropdownItemProps>>,\n  ): number => {\n    const isArrowUp = changes.type === Downshift.stateChangeTypes.keyDownArrowUp;\n    const isArrowDown = changes.type === Downshift.stateChangeTypes.keyDownArrowDown;\n    const itemsLength = filteredItems.length;\n\n    if (highlightedIndex) {\n      return highlightedIndex;\n    }\n\n    if (highlightFirstItemOnOpen) {\n      // otherwise, if highlightFirstItemOnOpen prop is provied, highlight first item.\n      return 0;\n    }\n\n    if (!multiple && !search && value.length > 0) {\n      // in single selection, if there is a selected item, highlight it.\n      const offset = isArrowUp ? -1 : isArrowDown ? 1 : 0;\n      const newHighlightedIndex = items.indexOf(value[0]) + offset;\n      if (newHighlightedIndex >= itemsLength) {\n        return 0;\n      }\n      if (newHighlightedIndex < 0) {\n        return itemsLength - 1;\n      }\n      return newHighlightedIndex;\n    }\n\n    if (isArrowDown) {\n      return 0;\n    }\n    if (isArrowUp) {\n      return itemsLength - 1;\n    }\n\n    return null;\n  };\n\n  /**\n   * Function that sets and cleans the selection message after it has been set,\n   * so it is not read anymore via virtual cursor.\n   */\n  const setA11ySelectionMessage = (a11ySelectionStatus: string): void => {\n    setA11ySelectionStatus(a11ySelectionStatus);\n    clearA11ySelectionMessage();\n  };\n\n  React.useEffect(() => {\n    return () => {\n      clearStartingString.cancel();\n      clearA11ySelectionMessage.cancel();\n    };\n  }, [clearA11ySelectionMessage, clearStartingString]);\n\n  const element = (\n    <ElementType\n      className={classes.root}\n      onBlur={handleOnBlur}\n      onChange={handleChange}\n      ref={ref}\n      {...unhandledProps}\n      {...(process.env.NODE_ENV === 'test' && { 'data-test-focused': focused })}\n    >\n      <Downshift\n        isOpen={open}\n        inputValue={search ? searchQuery : null}\n        stateReducer={downshiftStateReducer}\n        itemToString={itemToString}\n        // downshift does not work with arrays as selectedItem.\n        selectedItem={multiple || !value.length ? null : value[0]}\n        scrollIntoView={(node: HTMLElement, menu: HTMLElement) => {\n          if (node) {\n            const { children } = menu;\n            let nodeToScroll = node;\n            /**\n             * If it's loading downshift doesn't take the last node with loadingMessage\n             * in consideration to scrolld so we need to check if the current is the\n             * antepenultimate and is so scroll the loading into view, same for headerMessage\n             */\n            if (loading && children[children.length - 2] === node) {\n              nodeToScroll = children[children.length - 1] as HTMLElement;\n            } else if (headerMessage && children[1] === node) {\n              nodeToScroll = children[0] as HTMLElement;\n            }\n\n            // Replicating same config that Downshift uses\n            const actions = computeScrollIntoView(nodeToScroll, {\n              boundary: menu, // Explicitly set boundary to avoid unnecessary scrolling by checking all parent elements\n              scrollMode: 'if-needed',\n              block: 'nearest',\n              inline: 'nearest',\n            });\n            actions.forEach(({ el, top, left }) => {\n              el.scrollTop = top;\n              el.scrollLeft = left;\n            });\n          }\n        }}\n        getA11yStatusMessage={getA11yStatusMessage}\n        highlightedIndex={highlightedIndex}\n        onStateChange={handleStateChange}\n        onInputValueChange={handleInputValueChange}\n        labelId={ariaLabelledby}\n        environment={context.target?.defaultView}\n        inputId={searchInput && searchInput['id'] ? searchInput['id'] : undefined}\n      >\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          getRootProps,\n          getToggleButtonProps,\n          toggleMenu,\n          highlightedIndex,\n          selectItemAtIndex,\n        }) => {\n          const { innerRef, ...accessibilityRootPropsRest } = getRootProps(\n            { refKey: 'innerRef' },\n            { suppressRefError: true },\n          );\n          const showClearIndicator = clearable && value.length > 0;\n\n          return (\n            <Ref innerRef={innerRef}>\n              <div\n                ref={containerRef}\n                className={cx(dropdownSlotClassNames.container, classes.container)}\n                onClick={search && !open ? handleContainerClick : undefined}\n              >\n                <div ref={selectedItemsRef} className={cx(dropdownSlotClassNames.selectedItems, classes.selectedItems)}>\n                  {/* We previously were rendering the trigger button after selected items list,\n                    after listbox wrapper was introduced we moved it to before and\n                     set as absolute to avoid visual regressions   */}\n                  {!search && renderTriggerButton(getToggleButtonProps)}\n                  {multiple && renderSelectedItems()}\n                  {search &&\n                    renderSearchInput(\n                      accessibilityRootPropsRest,\n                      highlightedIndex,\n                      getInputProps,\n                      selectItemAtIndex,\n                      toggleMenu,\n                      variables,\n                    )}\n                </div>\n                {showClearIndicator\n                  ? Box.create(clearIndicator, {\n                      defaultProps: () => ({\n                        className: dropdownSlotClassNames.clearIndicator,\n                        styles: resolvedStyles.clearIndicator,\n                        accessibility: indicatorBehavior,\n                        ...(!search && { tabIndex: 0, role: 'button' }),\n                      }),\n                      overrideProps: (predefinedProps: BoxProps) => ({\n                        onClick: (e: React.SyntheticEvent<HTMLElement>) => {\n                          _.invoke(predefinedProps, 'onClick', e);\n                          handleClear(e);\n                        },\n                      }),\n                    })\n                  : Box.create(toggleIndicator, {\n                      defaultProps: () => ({\n                        className: dropdownSlotClassNames.toggleIndicator,\n                        styles: resolvedStyles.toggleIndicator,\n                        accessibility: indicatorBehavior,\n                      }),\n                      overrideProps: (predefinedProps: BoxProps) => ({\n                        onClick: e => {\n                          if (!disabled) {\n                            getToggleButtonProps({ disabled }).onClick(e);\n                          }\n\n                          _.invoke(predefinedProps, 'onClick', e);\n                        },\n                      }),\n                    })}\n                {renderItemsList(\n                  highlightedIndex,\n                  toggleMenu,\n                  selectItemAtIndex,\n                  getMenuProps,\n                  getItemProps,\n                  getInputProps,\n                )}\n              </div>\n            </Ref>\n          );\n        }}\n      </Downshift>\n      <Portal open={!!getA11ySelectionMessage}>\n        <div role=\"status\" aria-live=\"polite\" aria-relevant=\"additions text\" style={screenReaderContainerStyles}>\n          {a11ySelectionStatus}\n        </div>\n      </Portal>\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, DropdownProps> &\n  FluentComponentStaticProps<DropdownProps> & {\n    Item: typeof DropdownItem;\n    SearchInput: typeof DropdownSearchInput;\n    SelectedItem: typeof DropdownSelectedItem;\n  };\n\nDropdown.displayName = 'Dropdown';\n\nDropdown.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n    children: false,\n    content: false,\n  }),\n  activeSelectedIndex: PropTypes.number,\n  checkable: PropTypes.bool,\n  checkableIndicator: customPropTypes.shorthandAllowingChildren,\n  clearable: PropTypes.bool,\n  clearIndicator: customPropTypes.shorthandAllowingChildren,\n  defaultActiveSelectedIndex: PropTypes.number,\n  defaultOpen: PropTypes.bool,\n  defaultHighlightedIndex: PropTypes.number,\n  defaultSearchQuery: PropTypes.string,\n  defaultValue: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  disabled: PropTypes.bool,\n  error: PropTypes.bool,\n  fluid: PropTypes.bool,\n  getA11ySelectionMessage: PropTypes.object,\n  getA11yStatusMessage: PropTypes.func,\n  highlightFirstItemOnOpen: PropTypes.bool,\n  highlightedIndex: PropTypes.number,\n  inline: PropTypes.bool,\n  inverted: PropTypes.bool,\n  items: customPropTypes.collectionShorthand,\n  itemToString: PropTypes.func,\n  itemToValue: PropTypes.func,\n  headerMessage: customPropTypes.itemShorthand,\n  list: customPropTypes.itemShorthand,\n  loading: PropTypes.bool,\n  loadingMessage: customPropTypes.itemShorthand,\n  moveFocusOnTab: PropTypes.bool,\n  multiple: PropTypes.bool,\n  noResultsMessage: customPropTypes.itemShorthand,\n  onOpenChange: PropTypes.func,\n  onSearchQueryChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onActiveSelectedIndexChange: PropTypes.func,\n  onHighlightedIndexChange: PropTypes.func,\n  open: PropTypes.bool,\n  placeholder: PropTypes.string,\n  renderItem: PropTypes.func,\n  renderSelectedItem: PropTypes.func,\n  search: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  searchQuery: PropTypes.string,\n  searchInput: customPropTypes.itemShorthand,\n  toggleIndicator: customPropTypes.shorthandAllowingChildren,\n  triggerButton: customPropTypes.itemShorthand,\n  value: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  'aria-labelledby': PropTypes.string,\n  'aria-invalid': PropTypes.bool,\n  a11ySelectedItemsMessage: PropTypes.string,\n  // positioning props\n  align: PropTypes.oneOf(ALIGNMENTS),\n  flipBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  overflowBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  popperRef: customPropTypes.ref,\n  position: PropTypes.oneOf(POSITIONS),\n  positionFixed: PropTypes.bool,\n  offset: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.number) as PropTypes.Requireable<[number, number]>,\n  ]),\n  unstable_disableTether: PropTypes.oneOf([true, false, 'all']),\n  unstable_pinned: PropTypes.bool,\n  autoSize: PropTypes.oneOf<AutoSize>(AUTOSIZES),\n};\nDropdown.handledProps = Object.keys(Dropdown.propTypes) as any;\n\nDropdown.defaultProps = {\n  align: 'start',\n  clearIndicator: <CloseIcon outline />,\n  itemToString: item => {\n    if (!item || React.isValidElement(item)) {\n      return '';\n    }\n\n    // targets DropdownItem shorthand objects\n    return (item as any).header || String(item);\n  },\n  itemToValue: item => {\n    if (!item || React.isValidElement(item)) {\n      return '';\n    }\n\n    // targets DropdownItem shorthand objects\n    return (item as any).header || String(item);\n  },\n  list: {},\n  position: 'below',\n  toggleIndicator: <ChevronDownIcon outline />,\n  triggerButton: {},\n};\n\nDropdown.Item = DropdownItem;\nDropdown.SearchInput = DropdownSearchInput;\nDropdown.SelectedItem = DropdownSelectedItem;\n"],"file":"Dropdown.js"}
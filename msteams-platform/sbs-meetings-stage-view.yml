### YamlMime:Tutorial
title: Share meeting stage in Teams 
metadata:
  title: Share meeting stage in Team
  description: With this learning module, learn how to set up a Meeting Stage View for Teams to add status details for collaboration.
  audience: Developer
  level: Beginner
  ms.date: 12/06/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/build-tabs-for-meeting.md
  nextTutorialTitle: Read more to enable and configure apps for meetings
  ms.custom: mvc
  ms.localizationpriority: high
items:
- durationInMinutes: 1
  content: |
    Share meeting stage in Teams helps to enable and configure your apps for Teams meetings. It helps users to share meeting stage, allows meeting participants to add status details of past, present, and future tasks, enhancing Teams meeting experience.

    **Key features of share meeting stage in Teams**

    * Add status details in the side panel.
    * Add details for collaboration.
    
    This step-by-step guide helps you to share meeting stage in Teams to add status details for collaboration. You'll see the following output:

      :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/stage view.png" alt-text="meetings stage view":::

- title: Prerequisites
  durationInMinutes: 1
  content: |

    Ensure that you install the following tools and set up your development environment:  

     | &nbsp; | Install | For using... |
     | --- | --- | --- |
     | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams to collaborate with everyone you work with through apps for chat, meetings, and call-all in one place.|
     | &nbsp; | [Visual Studio 2022](https://visualstudio.microsoft.com) | You can install the enterprise version in Visual Studio 2022, and install the ASP.NET and web development workloads. Use the latest version. |
     | &nbsp; | [Node.js and NPM](https://nodejs.org/) | Back-end JavaScript runtime environment. For more information, see [Node.js version compatibility table for project type](~/toolkit/build-environments.md#nodejs-version-compatibility-table-for-project-type).|
     | &nbsp; | Dev tunnel | Teams app features (conversational bots, message extensions, and incoming webhooks) need inbound connections. A tunnel connects your development system to Teams. Dev tunnel is a powerful tool to securely open your localhost to the internet and control who has access. Dev tunnel is available in Visual Studio 2022 version 17.7.0 or later. <br> Or </br> You can also use [ngrok](https://ngrok.com/download) as a tunnel to connect your development system to Teams. It isn't required for apps that only include tabs. This package is installed within the project directory (using npm devDependencies). |
     
      > [!NOTE]
      > After downloading ngrok, sign up and install [authtoken](https://ngrok.com/download).

- title: Set up local environment
  durationInMinutes: 1
  content: |

    1. Open [Microsoft Teams Samples](https://github.com/OfficeDev/Microsoft-Teams-Samples).
    1. Select **Code**.
    1. From the dropdown menu, select **Open with GitHub Desktop**.

       :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/clone-repository.png" alt-text="cloning the repository":::

    1. Select **Clone**. 

       > [!NOTE]
       > If you encounter the error "Filename too long," apply the git command 'git config --system core.longpaths true' in your administrator terminal of choice.

- title: Set up tunnel for local web server
  durationInMinutes: 1
  content: |
    Use ngrok or Command Prompt to create a tunnel to your locally running web server's publicly available HTTPS endpoints. Run the following command in ngrok:

     ```bash
     ngrok http --host-header=localhost 3978
     ``` 
       > [!TIP]
       > If you encounter **ERR_NGROK_4018**, follow the steps, as displayed in the Command Prompt to sign up and authenticate ngrok. Then run the `ngrok http --host-header=localhost 3978` command.

      :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/ngrok1.png" alt-text="tunnel using command prompt":::
 
- title: Set up manifest file
  durationInMinutes: 1
  content: |
    1. Go to **manifest.json** in node.js folder in cloned repository.

        :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/manifest-path1.png" alt-text="path for manifest.json":::

    1. Open **manifest.json** in Visual Studio and make the following changes:

         * Replace `<<App-ID>>` with your bot's **Microsoft App ID**.
         * Replace `<<BASE-URL>>` to the fully qualified your ngrok domain name.
         * Replace `<<VALID DOMAIN>>` with your fully qualified ngrok domain name.
         
         :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/manifest file-1.png" alt-text="manifest file":::   

- title: Build and run client app using npm 
  durationInMinutes: 1 
  content: |
    1. In your cloned repository, go to **samples** > **meetings-stage-view** > **nodejs**.

    1. Copy the **nodejs** folder path.

       :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/app-manifest1.png" alt-text="folder path":::

    1. Open a new **Command Prompt** window, change the current directory to the copied **nodejs** path.

       :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/nodejs-path.png" alt-text="path for nodejs":::

    1. Run the following command in the **Command Prompt** to download packages and dependencies:

       ```Command-Prompt
        npm install
       ```  

    1. Run the following command in the **Command Prompt** to start the app:

       ```Command-Prompt
       npm start
       ```

       :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/npm install.png" alt-text="build and run":::
       
- title: Add meeting stage to Teams  
  durationInMinutes: 1
  content: |

    1. In your cloned repository, go to **samples> meetings-stage-view> nodejs> Manifest**.

    1. Create a .zip with the following files that are present in the **Manifest** folder: 
       * manifest.json
       * icon-outline.png
       * icon-color.png

       :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/meeting-stage-view-file1.png" alt-text="manifest":::
    
    1. Create a Teams meeting with a few presenters and attendees.
   
    1. After the meeting is created, go to the meeting details page and select **Add an app**.

       :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/addapp.png" alt-text="Add an app":::
       
    1. In the pop-up window, select **Manage apps**.

       :::image type="content" source="../msteams-platform/assets/meeting-token-generator-manageapps.png" alt-text="manage apps":::

    1. Select **Upload a custom app**. 

       :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/upload-custom-app.png" alt-text="upload a file":::

    1. Select **Open** to upload the .zip file that you created in the **Manifest** folder.

       :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/meeting-stage-view-upload-app1.png" alt-text="upload the app":::

    1. Select **Add**.

       :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/add-an-app-in meeting.png" alt-text="add app in meeting":::

       The **Manage apps** section displays the list of applications.

       :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/list-of-apps.png" alt-text="list of applications":::

- title: Interact with the app in Teams
  durationInMinutes: 1
  content: | 
    1. Go to Teams meeting.
    
    1. Select **Add an app**. 
    
       In the app selection page, the app is displayed as **App In Meeting**.
  
       :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/app in meeting.png" alt-text="app in meetings stage view":::
    
    1. Select the **App In Meeting**.
    
    1. Select **Save**.

       :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/welcome app.png" alt-text="welcome to app":::
   
    1. Start the meeting. 
    
       The icon is visible in the meeting control bar.
       
       :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/meeting app in teams.png" alt-text="meeting app":::

    1. To update the sprint status task, add:

       * **Assigned To**
       * **Description**

       :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/add-status.png" alt-text="add status in meeting":::
       
       App in side panel view:

       :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/side panel view.png" alt-text="panel view":::

- title: Complete challenge
  durationInMinutes: 1
  content: |
    Did you come up with something like this?

    :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/stage view.png" alt-text="stage view output":::

- content: |
    You've completed the tutorial to get started with share meeting stage in Teams.

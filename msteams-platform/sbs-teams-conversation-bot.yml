### YamlMime:Tutorial
title: Create Teams conversation bot
metadata:
  title: Create Teams conversation bot
  description: In this module, you can learn to create basic conversation bot in Microsoft Teams application.
  audience: Developer
  level: Beginner
  ms.date: 04/01/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/conversations/channel-and-group-conversations.md
  nextTutorialTitle: Channel and group chat conversations with a bot
  ms.custom: mvc
  ms.localizationpriority: none
items:
- durationInMinutes: 1
  content: |
    Microsoft Teams conversation bot allows users to interact with your web service through text, interactive cards, and task modules. Basic conversations are handled through the Bot Framework connector, a single REST API. This API enables your bot to communicate with Teams and other channels. 
    
    **Key features of Bot Builder SDK**

    * Provides access to the Bot Framework connector.
    * Manages conversation flow and state.
    * Incorporates cognitive services, such as Natural Language Processing (NLP).

    When your bot is added to a group or a team, an introduction message is sent. The message provides a brief description of the bot's features and how to use them.
 
    This step-by-step guide helps you to create a conversation bot in the Teams application. You can see the following output:

    :::image type="content" source="./assets/images/conversation-bot/final-output.png" alt-text="Final output."lightbox="assets/images/conversation-bot/final-output.png":::

- title: Prerequisites
  durationInMinutes: 1
  content: |
    Ensure that you install the following tools and set up your development environment:

    | &nbsp; | Install | For using... |
     | --- | --- | --- |
     | &nbsp; | [Microsoft 365 developer account](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | Access to Teams account with the appropriate permissions to install an app. |
     | &nbsp; | [ngrok](https://ngrok.com/download) | Teams app features (conversational bots, message extensions, and incoming webhooks) require inbound connections. A tunnel connects your development system to Teams. It isn't required for apps that only include tabs. This package is installed within the project directory (using npm `devDependencies`). |
     | &nbsp; | [Visual Studio 2022](https://visualstudio.microsoft.com) | You can install the enterprise version in Visual Studio 2022, and install the ASP.NET and web development workloads. Use the latest version. |   
     | &nbsp; | [.NET Core SDK](https://dotnet.microsoft.com/en-us/download) | Customized bindings for local debugging and Azure Functions app deployments.  If you haven't installed the latest version, install the portable version. |
     | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams to collaborate with everyone you work with through apps for chat, meetings, and call-all in one place |
      
      > [!NOTE]
      > After downloading ngrok, sign up and install [authtoken](https://ngrok.com/download).

- title: Set up local environment
  durationInMinutes: 1
  content: |
   Clone **Microsoft-Teams-Samples** repository to your local GitHub:  

   [INCLUDE [Set up local environment](includes/get-started/clone-repository)]

- title: Create and register your bot
  durationInMinutes: 5
  content: |
    Register your bot with Azure Bot service when you develop and host it in Azure. Following are the steps:

    1. Create bot channel registration in Azure account.
    1. Create client secret that enables single sign-on (SSO) authentication of the bot.
    1. Add API permissions for downstream calls.
    1. Add Teams channel to deploy the bot to a Teams channel.
    1. Create a ngrok tunnel to the endpoints of your web server.
    1. Add messaging endpoint to the ngrok tunnel you created.

      [INCLUDE [Azure bot resource](includes/get-started/azure-bot-resource)]
    
    **To create client secret**

      [INCLUDE [Client secret](includes/get-started/create-client-secret)]

    **To add API permissions for downstream calls**

    1. In the left pane, select **API permissions**.
    1. Select **Add a permission**. 
       **Request API permissions** window appears.
    1. Select **Microsoft APIs** > **Microsoft Graph**.

       :::image type="content" source="./assets/images/conversation-bot/api-permissions_1.png" alt-text="Add API permissions."lightbox="assets/images/conversation-bot/api-permissions_1.png":::

    1. Select **Application permissions**.

    1. Select the required user permissions, for example, `User.Read.All`.
    
    1. Select **Add permissions**.

       :::image type="content" source="./assets/images/conversation-bot/api-permissions_3.png" alt-text="Add API permissions."lightbox="assets/images/conversation-bot/api-permissions.png":::

    **To add messaging endpoint**

      [INCLUDE [messaging endpoint](includes/get-started/messaging-endpoint)]

    **To add the Microsoft Teams channel**

      [INCLUDE [Teams channel](includes/get-started/add-teams-channel)]

      [Dev tunnel](#tab/Dev tunnel)
      [INCLUDE [Tunnel](includes/get-started/dev-tunnel)]

      [ngork](#tab/ngork)
      [INCLUDE [Tunnel](includes/get-started/ngrok-tunnel)]

      [INCLUDE [messaging endpoint](includes/get-started/messaging-endpoint)]

    You have successfully set up a bot in Azure Bot service and you need to set up bot service connection.

- title: Set up bot service connection
  durationInMinutes: 1
  content: |
    Configure the bot to understand how to authenticate conversation bot in Teams, create the Teams app package, and upload it to the organization.
    
    1. Update the appsettings.json file in Visual Studio.
    1. Update the manifest.json file in Visual Studio and compress it to the zip file in the File Explorer.
    1. Run your solution in Visual Studio.
    1. Upload the bot to Teams.

    **To update appsettings**

    1. In the **File Explorer**, go to **Microsoft-Teams-Samples** > **samples** > **bot-conversation** > **csharp**.
    1. Open the **appsettings.json** file in Visual Studio and update the configuration for the bot.
   
        * Set `"MicrosoftAppType"`to **Multitenant**.
        * Set `"MicrosoftAppId"` to your bot's **Microsoft App ID**.
        * Set `"MicrosoftAppPassword"` to your bot's client secret ID **Value**.
        * Set your `"MicrosoftAppTenantId"` to your tenant ID. You can obtain the tenant ID from the link of the account used to sign in to the Teams. 
          Following are the steps to get the link for **tenantId**:
        
          1. Select **Teams**.

          1. Select More options (●●●).

          1. Select **Get link to team**.

             :::image type="content" source="./assets/images/conversation-bot/teams-link-new_1.png" alt-text="Tenant ID path in Teams.":::
            
          1. Select **Copy**.

             :::image type="content" source="./assets/images/conversation-bot/tenant-id.png" alt-text="Copy Teams link.":::

          1. Copy the **tenant ID** from the URL.

             :::image type="content" source="./assets/images/conversation-bot/url-tenantid_1.png" alt-text="TenantID.":::

        :::image type="content" source="./assets/images/conversation-bot/appsettings_1.png" alt-text="Appsettings Json.":::

    1. Select **Save**.

    **To update manifest**

    1. In the **File Explorer**, go to **Microsoft-Teams-Samples** > **samples** > **bot-conversation** > **csharp** > **TeamsAppManifest**.
    
       :::image type="content" source="./assets/images/conversation-bot/manifest-file-location.png" alt-text="Manifest.":::

    1. Open the **manifest.json** file in Visual Studio and make the following changes:
       * Replace `"id"`and `"botId"` to your bot's **Microsoft App ID**.
       * Replace `"validDomains"` to your ngrok domain excluding `https://`.

        :::image type="content" source="./assets/images/conversation-bot/manifest_1.png" alt-text="Manifest.":::

    1. Zip the contents of the **TeamsAppManifest** folder to create manifest.zip.
    
        > [!NOTE]
        > The `manifest.zip` must not contain any other folders in it. It must have `manifest json` source file, `color` icon, and `outline` icon inside the zip folder.
        > Run your solution in Visual Studio and upload your manifest in your demo tenant for organization or your Teams account.
    
    **To run solution in Visual Studio**

    1. Open Visual Studio.

    1. Select **File** > **Open** > **Project/Solution....**.

       ![Open file](~/assets/images/Tab-ME-SSO/open-project1.png)

    1. Go to **Microsoft-Teams-Samples** > **samples** > **bot-conversation** > **csharp**.

    1. Select **TeamsConversationBot.c#proj** file.

        :::image type="content" source="./assets/images/conversation-bot/project-file-location.png" alt-text="Visual Studio debug.":::

    1. Select **F5** to run the project.

    1. Select **Yes** to install the certificate.

       :::image type="content" source="./assets/images/conversation-bot/certificate.png" alt-text="Trust Certificate.":::
    
       A webpage appears with a message **Your bot is ready!**

       :::image type="content" source="./assets/images/conversation-bot/bot.png" alt-text="Bot ready screen.":::

    **To upload the app to Teams**

    1. In the Teams client, select the **Apps** icon.

    1. Select **Manage your apps**.

    1. Select **Upload an app**.

    1. Look for the option to **Upload a custom app**. If you see the option, sideloading apps is enabled.

        :::image type="content" source="~/assets/images/teams-toolkit-v2/spfx-custom-latest.png" alt-text="Screenshot shows the bot home." lightbox="~\assets\images\teams-toolkit-v2\spfx-custom-new2.png":::

        > [!NOTE]
        > Contact your Teams administrator, if you don't find the option to upload a custom app.
  
    1. Select **Open** to upload the .zip file that you created in the **TeamAppManifest** folder.
    
        :::image type="content" source="./assets/images/conversation-bot/upload-manifest-zip.png" alt-text="Manifest upload in Teams.":::

    1. Select **Add**.

       :::image type="content" source="./assets/images/conversation-bot/add-app-teams.png" alt-text="Add App to Teams.":::

        You can interact with the bot.

- title: Interact with the conversation bot
  durationInMinutes: 2
  content: |
    You can interact with the bot in Teams by sending it a message, or selecting a command from the command list. The bot responds to the strings.

    In the left pane of the Teams, select More added apps (●●●), and then select your app from the list. The bot shows **Suggestions** as follows:
       * **MentionMe**
       * **Show Welcome**
       * **MessageAllMembers**

    :::image type="content" source="./assets/images/conversation-bot/suggestions_1.png" alt-text="Suggestions card.":::

    | MentionMe    | Show Welcome   | MessageAllMembers |
    | --- | --- | --- |
    | :::image type="content" source="./assets/images/conversation-bot/mentionme-new.png" alt-text="Mentionme card"lightbox="assets/images/conversation-bot/mentionme-new.png"::: | :::image type="content" source="./assets/images/conversation-bot/show-welcome-new.png" alt-text="Show Welcome card"lightbox="assets/images/conversation-bot/show-welcome-new.png"::: | :::image type="content" source="./assets/images/conversation-bot/message-all-members-new.png" alt-text="MessageAllMembers card"lightbox="assets/images/conversation-bot/message-all-members-new.png"::: |
    | **Result:** The bot responds to the message and mention the user. | **Result:** The bot sends the welcome card for you to interact with. |  **Result:** The bot sends a one-on-one message to each member in the current conversation. |
    | **Valid scopes:** personal, group chat, team chat. | **Valid scopes:** personal, group chat, team chat. |  **Valid scopes:** personal, group chat, team chat. |

    You can select an option from the command list by typing **@TeamsConversationBot** or **What can I do?** text in the compose area and send it.

    :::image type="content" source="./assets/images/conversation-bot/final-output_1.png" alt-text="Final output":::

- title: Complete challenge
  durationInMinutes: 1
  content: |
    Did you come up with something like this?

    :::image type="content" source="./assets/images/conversation-bot/final-output.png" alt-text="Final output.":::
    
- content: |
    You've completed the tutorial to get started with conversation bot for Microsoft Teams.
